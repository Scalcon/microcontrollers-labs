


ARM Macro Assembler    Page 1 


    1 00000000         ; matrix_keyboard.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Template by Prof. Guilherme Peron - 24/08/2020
    4 00000000         
    5 00000000         ; ------------------------------------------------------
                       -------------------------
    6 00000000                 THUMB                        ; Instru??es do tip
                                                            o Thumb-2
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000         
    9 00000000         ; Declara??es EQU - Defines
   10 00000000         ;<NOME>         EQU <VALOR>
   11 00000000         ; ========================
   12 00000000 00000002 
                       COFRE_FECHANDO
                               EQU              2
   13 00000000         ; ------------------------------------------------------
                       -------------------------
   14 00000000         ; ?rea de Dados - Declara??es de vari?veis
   15 00000000                 AREA             DATA, ALIGN=2
   16 00000000         ; Se alguma vari?vel for chamada em outro arquivo
   17 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       ri?vel <var> a 
   18 00000000         ; partir de outro arquivo
   19 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       vari?vel de nome <var>
   20 00000000         ; de <tam> bytes a partir da primeira 
   21 00000000         ; posi??o da RAM  
   22 00000000         
   23 00000000         ; ------------------------------------------------------
                       -------------------------
   24 00000000         ; ?rea de C?digo - Tudo abaixo da diretiva a seguir ser?
                        armazenado na mem?ria de 
   25 00000000         ;                  c?digo
   26 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   27 00000000         
   28 00000000         ; Se alguma fun??o do arquivo for chamada em outro arqui
                       vo
   29 00000000         ; EXPORT <func>    ; Permite chamar a fun??o a partir de
                        outro arquivo
   30 00000000                 EXPORT           MapMatrixKeyboard
   31 00000000         
   32 00000000         ; Se chamar alguma fun??o externa 
   33 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma fun??o de outro
   34 00000000                 IMPORT           PortM_Output
   35 00000000                 IMPORT           PortL_Input
   36 00000000                 IMPORT           LCD_PrintString
   37 00000000                 IMPORT           SysTick_Wait1ms
   38 00000000         ; ------------------------------------------------------
                       -------------------------
   39 00000000         
   40 00000000         ; Fun??o MapMatrixKeyboard
   41 00000000         ; Mapeia o teclado matricial
   42 00000000         ; Par?metro de entrada:
   43 00000000         ; Par?metro de sa?da:
   44 00000000         MapMatrixKeyboard



ARM Macro Assembler    Page 2 


   45 00000000 B500            PUSH             {LR}
   46 00000002         
   47 00000002         ; ------------------------------------------------------
                       -----
   48 00000002 F04F 00E0       MOV              R0, #2_11100000 ; Iterando sobr
                                                            e a primeira coluna
                                                            
   49 00000006 F7FF FFFE       BL               PortM_Output
   50 0000000A F7FF FFFE       BL               PortL_Input
   51 0000000E         
   52 0000000E 280E            CMP              R0, #2_1110 ; Numero 1 foi pres
                                                            sionado
   53 00000010 D048            BEQ              DIGIT_1
   54 00000012         
   55 00000012 280D            CMP              R0, #2_1101 ; Numero 4 foi pres
                                                            sionado
   56 00000014 D06D            BEQ              DIGIT_4
   57 00000016         
   58 00000016 280B            CMP              R0, #2_1011 ; Numero 7 foi pres
                                                            sionado
   59 00000018 F000 8092       BEQ.W            DIGIT_7
   60 0000001C         
   61 0000001C 2807            CMP              R0, #2_0111 ; Simbolo * foi pre
                                                            ssionado
   62 0000001E F000 80EA       BEQ.W            DIGIT_AST   ; Error: Branch off
                                                            set out of range (B
                                                            EQ.W corrige o prob
                                                            lema)
   63 00000022         ; ------------------------------------------------------
                       -----
   64 00000022         
   65 00000022         ; ------------------------------------------------------
                       -----
   66 00000022 F04F 00D0       MOV              R0, #2_11010000 ; Iterando sobr
                                                            e a segunda coluna
   67 00000026 F7FF FFFE       BL               PortM_Output
   68 0000002A F7FF FFFE       BL               PortL_Input
   69 0000002E         
   70 0000002E 280E            CMP              R0, #2_1110 ; Numero 2 foi pres
                                                            sionado
   71 00000030 D045            BEQ              DIGIT_2
   72 00000032         
   73 00000032 280D            CMP              R0, #2_1101 ; Numero 5 foi pres
                                                            sionado
   74 00000034 D06A            BEQ              DIGIT_5
   75 00000036         
   76 00000036 280B            CMP              R0, #2_1011 ; Numero 8 foi pres
                                                            sionado
   77 00000038 F000 808F       BEQ.W            DIGIT_8
   78 0000003C         
   79 0000003C 2807            CMP              R0, #2_0111 ; Numero 0 foi pres
                                                            sionado
   80 0000003E D024            BEQ              DIGIT_0
   81 00000040         ; ------------------------------------------------------
                       -----
   82 00000040         
   83 00000040         ; ------------------------------------------------------
                       -----
   84 00000040 F04F 00B0       MOV              R0, #2_10110000 ; Iterando sobr



ARM Macro Assembler    Page 3 


                                                            e a terceira coluna
                                                            
   85 00000044 F7FF FFFE       BL               PortM_Output
   86 00000048 F7FF FFFE       BL               PortL_Input
   87 0000004C         
   88 0000004C 280E            CMP              R0, #2_1110 ; Numero 3 foi pres
                                                            sionado
   89 0000004E D043            BEQ              DIGIT_3
   90 00000050         
   91 00000050 280D            CMP              R0, #2_1101 ; Numero 6 foi pres
                                                            sionado
   92 00000052 D068            BEQ              DIGIT_6
   93 00000054         
   94 00000054 280B            CMP              R0, #2_1011 ; Numero 9 foi pres
                                                            sionado
   95 00000056 F000 808D       BEQ.W            DIGIT_9
   96 0000005A         
   97 0000005A 2807            CMP              R0, #2_0111 ; Símbolo # foi pre
                                                            ssionado
   98 0000005C F000 80D8       BEQ.W            DIGIT_HASH  ; Error: Branch off
                                                            set out of range (B
                                                            EQ.W corrige o prob
                                                            lema)
   99 00000060         ; ------------------------------------------------------
                       -----
  100 00000060         
  101 00000060         ; ------------------------------------------------------
                       -----
  102 00000060 F04F 0038       MOV              R0, #2_0111000 ; Iterando sobre
                                                             a quarta coluna
  103 00000064 F7FF FFFE       BL               PortM_Output
  104 00000068 F7FF FFFE       BL               PortL_Input
  105 0000006C         
  106 0000006C 280E            CMP              R0, #2_1110 ; Letra A foi press
                                                            ionado
  107 0000006E F000 808E       BEQ.W            DIGIT_A
  108 00000072         
  109 00000072 280D            CMP              R0, #2_1101 ; Letra B foi press
                                                            ionado
  110 00000074 F000 8098       BEQ.W            DIGIT_B
  111 00000078         
  112 00000078 280B            CMP              R0, #2_1011 ; Letra C foi press
                                                            ionado
  113 0000007A F000 80A2       BEQ.W            DIGIT_C
  114 0000007E         
  115 0000007E 2807            CMP              R0, #2_0111 ; Letra D foi press
                                                            ionado
  116 00000080 F000 80AC       BEQ.W            DIGIT_D
  117 00000084         ; ------------------------------------------------------
                       -----
  118 00000084         
  119 00000084 F85D EB04       POP              {LR}
  120 00000088 4770            BX               LR
  121 0000008A         
  122 0000008A         ; Funções DIGIT_X
  123 0000008A         ; Tratam a resposta do sistema para cada tecla pressiona
                       da
  124 0000008A         ; Parametro de entrada: N?o tem
  125 0000008A         ; Parametro de saída: R6 -> O dígito inserido



ARM Macro Assembler    Page 4 


  126 0000008A         DIGIT_0
  127 0000008A B500            PUSH             {LR}
  128 0000008C         
  129 0000008C F04F 0600       MOV              R6, #0x0    ; Guarda o d?gito i
                                                            nserido
  130 00000090         
  131 00000090 4C6F            LDR              R4, =DIGIT_0_STR ; Imprime o d?
                                                            gito no LCD
  132 00000092 F7FF FFFE       BL               LCD_PrintString
  133 00000096         
  134 00000096 F000 F8C4       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  135 0000009A         
  136 0000009A F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de d?gitos ins
                                                            eridos
  137 0000009E         
  138 0000009E F85D EB04       POP              {LR}        ; Retorna ap?s d?gi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  139 000000A2 4770            BX               LR
  140 000000A4         
  141 000000A4         DIGIT_1
  142 000000A4 B500            PUSH             {LR}
  143 000000A6         
  144 000000A6 F04F 0601       MOV              R6, #0x1    ; Guarda o d?gito i
                                                            nserido
  145 000000AA         
  146 000000AA 4C6A            LDR              R4, =DIGIT_1_STR ; Imprime o d?
                                                            gito no LCD
  147 000000AC F7FF FFFE       BL               LCD_PrintString
  148 000000B0         
  149 000000B0 F000 F8B7       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  150 000000B4         
  151 000000B4 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de d?gitos ins
                                                            eridos
  152 000000B8         
  153 000000B8 F85D EB04       POP              {LR}        ; Retorna ap?s d?gi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  154 000000BC 4770            BX               LR
  155 000000BE         
  156 000000BE         DIGIT_2
  157 000000BE B500            PUSH             {LR}
  158 000000C0         
  159 000000C0 F04F 0602       MOV              R6, #0x2    ; Guarda o d?gito i
                                                            nserido
  160 000000C4         
  161 000000C4 4C64            LDR              R4, =DIGIT_2_STR ; Imprime o d?
                                                            gito no LCD
  162 000000C6 F7FF FFFE       BL               LCD_PrintString
  163 000000CA         
  164 000000CA F000 F8AA       BL               Debouncing  ; Trata o bouncing 



ARM Macro Assembler    Page 5 


                                                            da tecla via softwa
                                                            re
  165 000000CE         
  166 000000CE F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de d?gitos ins
                                                            eridos
  167 000000D2         
  168 000000D2 F85D EB04       POP              {LR}        ; Retorna ap?s d?gi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  169 000000D6 4770            BX               LR
  170 000000D8         
  171 000000D8         DIGIT_3
  172 000000D8 B500            PUSH             {LR}
  173 000000DA         
  174 000000DA F04F 0603       MOV              R6, #0x3    ; Guarda o d?gito i
                                                            nserido
  175 000000DE         
  176 000000DE 4C5F            LDR              R4, =DIGIT_3_STR ; Imprime o d?
                                                            gito no LCD
  177 000000E0 F7FF FFFE       BL               LCD_PrintString
  178 000000E4         
  179 000000E4 F000 F89D       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  180 000000E8         
  181 000000E8 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de d?gitos ins
                                                            eridos
  182 000000EC         
  183 000000EC F85D EB04       POP              {LR}        ; Retorna ap?s d?gi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  184 000000F0 4770            BX               LR
  185 000000F2         
  186 000000F2         DIGIT_4
  187 000000F2 B500            PUSH             {LR}
  188 000000F4         
  189 000000F4 F04F 0604       MOV              R6, #0x4    ; Guarda o d?gito i
                                                            nserido
  190 000000F8         
  191 000000F8 4C59            LDR              R4, =DIGIT_4_STR ; Imprime o d?
                                                            gito no LCD
  192 000000FA F7FF FFFE       BL               LCD_PrintString
  193 000000FE         
  194 000000FE F000 F890       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  195 00000102         
  196 00000102 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de d?gitos ins
                                                            eridos
  197 00000106         
  198 00000106 F85D EB04       POP              {LR}        ; Retorna ap?s d?gi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so



ARM Macro Assembler    Page 6 


  199 0000010A 4770            BX               LR
  200 0000010C         
  201 0000010C         DIGIT_5
  202 0000010C B500            PUSH             {LR}
  203 0000010E         
  204 0000010E F04F 0605       MOV              R6, #0x5    ; Guarda o d?gito i
                                                            nserido
  205 00000112         
  206 00000112 4C54            LDR              R4, =DIGIT_5_STR ; Imprime o d?
                                                            gito no LCD
  207 00000114 F7FF FFFE       BL               LCD_PrintString
  208 00000118         
  209 00000118 F000 F883       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  210 0000011C         
  211 0000011C F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de d?gitos ins
                                                            eridos
  212 00000120         
  213 00000120 F85D EB04       POP              {LR}        ; Retorna ap?s d?gi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  214 00000124 4770            BX               LR
  215 00000126         
  216 00000126         DIGIT_6
  217 00000126 B500            PUSH             {LR}
  218 00000128         
  219 00000128 F04F 0606       MOV              R6, #0x6    ; Guarda o d?gito i
                                                            nserido
  220 0000012C         
  221 0000012C 4C4E            LDR              R4, =DIGIT_6_STR ; Imprime o d?
                                                            gito no LCD
  222 0000012E F7FF FFFE       BL               LCD_PrintString
  223 00000132         
  224 00000132 F000 F876       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  225 00000136         
  226 00000136 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de d?gitos ins
                                                            eridos
  227 0000013A         
  228 0000013A F85D EB04       POP              {LR}        ; Retorna ap?s d?gi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  229 0000013E 4770            BX               LR
  230 00000140         
  231 00000140         DIGIT_7
  232 00000140 B500            PUSH             {LR}
  233 00000142         
  234 00000142 F04F 0607       MOV              R6, #0x7    ; Guarda o d?gito i
                                                            nserido
  235 00000146         
  236 00000146 4C49            LDR              R4, =DIGIT_7_STR ; Imprime o d?
                                                            gito no LCD
  237 00000148 F7FF FFFE       BL               LCD_PrintString



ARM Macro Assembler    Page 7 


  238 0000014C         
  239 0000014C F000 F869       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  240 00000150         
  241 00000150 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de d?gitos ins
                                                            eridos
  242 00000154         
  243 00000154 F85D EB04       POP              {LR}        ; Retorna ap?s d?gi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  244 00000158 4770            BX               LR
  245 0000015A         
  246 0000015A         DIGIT_8
  247 0000015A B500            PUSH             {LR}
  248 0000015C         
  249 0000015C F04F 0608       MOV              R6, #0x8    ; Guarda o d?gito i
                                                            nserido
  250 00000160         
  251 00000160 4C43            LDR              R4, =DIGIT_8_STR ; Imprime o d?
                                                            gito no LCD
  252 00000162 F7FF FFFE       BL               LCD_PrintString
  253 00000166         
  254 00000166 F000 F85C       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  255 0000016A         
  256 0000016A F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de d?gitos ins
                                                            eridos
  257 0000016E         
  258 0000016E F85D EB04       POP              {LR}        ; Retorna ap?s d?gi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  259 00000172 4770            BX               LR
  260 00000174         
  261 00000174         DIGIT_9
  262 00000174 B500            PUSH             {LR}
  263 00000176         
  264 00000176 F04F 0609       MOV              R6, #0x9    ; Guarda o d?gito i
                                                            nserido
  265 0000017A         
  266 0000017A 4C3E            LDR              R4, =DIGIT_9_STR ; Imprime o d?
                                                            gito no LCD
  267 0000017C F7FF FFFE       BL               LCD_PrintString
  268 00000180         
  269 00000180 F000 F84F       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  270 00000184         
  271 00000184 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de d?gitos ins
                                                            eridos
  272 00000188         
  273 00000188 F85D EB04       POP              {LR}        ; Retorna ap?s d?gi
                                                            to inserido ter sid



ARM Macro Assembler    Page 8 


                                                            o guardado e impres
                                                            so
  274 0000018C 4770            BX               LR
  275 0000018E         
  276 0000018E         DIGIT_A
  277 0000018E B500            PUSH             {LR}
  278 00000190         
  279 00000190 F04F 060A       MOV              R6, #0xA    ; Guarda o d?gito i
                                                            nserido
  280 00000194         
  281 00000194 4C38            LDR              R4, =DIGIT_A_STR ; Imprime o d?
                                                            gito no LCD
  282 00000196 F7FF FFFE       BL               LCD_PrintString
  283 0000019A         
  284 0000019A F000 F842       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  285 0000019E         
  286 0000019E F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de d?gitos ins
                                                            eridos
  287 000001A2         
  288 000001A2 F85D EB04       POP              {LR}        ; Retorna ap?s d?gi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  289 000001A6 4770            BX               LR
  290 000001A8         
  291 000001A8         DIGIT_B
  292 000001A8 B500            PUSH             {LR}
  293 000001AA         
  294 000001AA F04F 060B       MOV              R6, #0xB    ; Guarda o d?gito i
                                                            nserido
  295 000001AE         
  296 000001AE 4C33            LDR              R4, =DIGIT_B_STR ; Imprime o d?
                                                            gito no LCD
  297 000001B0 F7FF FFFE       BL               LCD_PrintString
  298 000001B4         
  299 000001B4 F000 F835       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  300 000001B8         
  301 000001B8 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de d?gitos ins
                                                            eridos
  302 000001BC         
  303 000001BC F85D EB04       POP              {LR}        ; Retorna ap?s d?gi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  304 000001C0 4770            BX               LR
  305 000001C2         
  306 000001C2         DIGIT_C
  307 000001C2 B500            PUSH             {LR}
  308 000001C4         
  309 000001C4 F04F 060C       MOV              R6, #0xC    ; Guarda o d?gito i
                                                            nserido
  310 000001C8         
  311 000001C8 4C2D            LDR              R4, =DIGIT_C_STR ; Imprime o d?



ARM Macro Assembler    Page 9 


                                                            gito no LCD
  312 000001CA F7FF FFFE       BL               LCD_PrintString
  313 000001CE         
  314 000001CE F000 F828       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  315 000001D2         
  316 000001D2 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de d?gitos ins
                                                            eridos
  317 000001D6         
  318 000001D6 F85D EB04       POP              {LR}        ; Retorna ap?s d?gi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  319 000001DA 4770            BX               LR
  320 000001DC         
  321 000001DC         DIGIT_D
  322 000001DC B500            PUSH             {LR}
  323 000001DE         
  324 000001DE F04F 060D       MOV              R6, #0xD    ; Guarda o d?gito i
                                                            nserido
  325 000001E2         
  326 000001E2 4C28            LDR              R4, =DIGIT_D_STR ; Imprime o d?
                                                            gito no LCD
  327 000001E4 F7FF FFFE       BL               LCD_PrintString
  328 000001E8         
  329 000001E8 F000 F81B       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  330 000001EC         
  331 000001EC F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de d?gitos ins
                                                            eridos
  332 000001F0         
  333 000001F0 F85D EB04       POP              {LR}        ; Retorna ap?s d?gi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  334 000001F4 4770            BX               LR
  335 000001F6         
  336 000001F6         DIGIT_AST
  337 000001F6 B500            PUSH             {LR}
  338 000001F8         
  339 000001F8 F04F 060E       MOV              R6, #0xE    ; Guarda o d?gito i
                                                            nserido
  340 000001FC         
  341 000001FC 4C22            LDR              R4, =DIGIT_AST_STR ; Imprime o 
                                                            d?gito no LCD
  342 000001FE F7FF FFFE       BL               LCD_PrintString
  343 00000202         
  344 00000202 F000 F80E       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  345 00000206         
  346 00000206 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de d?gitos ins
                                                            eridos
  347 0000020A         



ARM Macro Assembler    Page 10 


  348 0000020A F85D EB04       POP              {LR}        ; Retorna ap?s d?gi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  349 0000020E 4770            BX               LR
  350 00000210         
  351 00000210         DIGIT_HASH
  352 00000210 B500            PUSH             {LR}
  353 00000212         
  354 00000212 2F04            CMP              R7, #4      ; Verifica se 4 d?g
                                                            itos j? foram inser
                                                            idos
  355 00000214 BF08 2502       MOVEQ            R5, #COFRE_FECHANDO ; Senha de 
                                                            4 d?gitos inserida,
                                                             coloca o cofre em 
                                                            processo de fechame
                                                            nto
  356 00000218         
  357 00000218 F000 F803       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  358 0000021C         
  359 0000021C F85D EB04       POP              {LR}        ; Retorna ap?s d?gi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  360 00000220 4770            BX               LR
  361 00000222         
  362 00000222         ; Função Debouncing
  363 00000222         ; Trata o bouncing da tecla aguardando um tempo fixo (0,
                       5s)
  364 00000222         ; Parametro de entrada: Não tem
  365 00000222         ; Parametro de saída: Não tem
  366 00000222         Debouncing
  367 00000222 B500            PUSH             {LR}
  368 00000224         
  369 00000224 F44F 70FA       MOV              R0, #500
  370 00000228 F7FF FFFE       BL               SysTick_Wait1ms
  371 0000022C         
  372 0000022C F85D EB04       POP              {LR}
  373 00000230 4770            BX               LR
  374 00000232         
  375 00000232         ; Definição dos textos do LCD
  376 00000232 30 00   DIGIT_0_STR
                               DCB              "0", 0
  377 00000234 31 00   DIGIT_1_STR
                               DCB              "1", 0
  378 00000236 32 00   DIGIT_2_STR
                               DCB              "2", 0
  379 00000238 33 00   DIGIT_3_STR
                               DCB              "3", 0
  380 0000023A 34 00   DIGIT_4_STR
                               DCB              "4", 0
  381 0000023C 35 00   DIGIT_5_STR
                               DCB              "5", 0
  382 0000023E 36 00   DIGIT_6_STR
                               DCB              "6", 0
  383 00000240 37 00   DIGIT_7_STR
                               DCB              "7", 0



ARM Macro Assembler    Page 11 


  384 00000242 38 00   DIGIT_8_STR
                               DCB              "8", 0
  385 00000244 39 00   DIGIT_9_STR
                               DCB              "9", 0
  386 00000246 41 00   DIGIT_A_STR
                               DCB              "A", 0
  387 00000248 42 00   DIGIT_B_STR
                               DCB              "B", 0
  388 0000024A 43 00   DIGIT_C_STR
                               DCB              "C", 0
  389 0000024C 44 00   DIGIT_D_STR
                               DCB              "D", 0
  390 0000024E         
  391 0000024E 2A 00   DIGIT_AST_STR
                               DCB              "*", 0
  392 00000250         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  393 00000250         ; Fim do Arquivo
  394 00000250         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  395 00000250                 ALIGN                        ; Garante que o fim
                                                             da se??o est? alin
                                                            hada 
  396 00000250                 END                          ; Fim do arquivo
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\teclado.d -o.\objects\teclado.o -IC:\Users\pedro\AppData\Loc
al\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SET
A 1" --predefine="__UVISION_VERSION SETA 541" --predefine="TM4C1294NCPDT SETA 1
" --list=.\listings\teclado.lst teclado.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 15 in file teclado.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 26 in file teclado.s
   Uses
      None
Comment: .text unused
DIGIT_0 0000008A

Symbol: DIGIT_0
   Definitions
      At line 126 in file teclado.s
   Uses
      At line 80 in file teclado.s
Comment: DIGIT_0 used once
DIGIT_0_STR 00000232

Symbol: DIGIT_0_STR
   Definitions
      At line 376 in file teclado.s
   Uses
      At line 131 in file teclado.s
Comment: DIGIT_0_STR used once
DIGIT_1 000000A4

Symbol: DIGIT_1
   Definitions
      At line 141 in file teclado.s
   Uses
      At line 53 in file teclado.s
Comment: DIGIT_1 used once
DIGIT_1_STR 00000234

Symbol: DIGIT_1_STR
   Definitions
      At line 377 in file teclado.s
   Uses
      At line 146 in file teclado.s
Comment: DIGIT_1_STR used once
DIGIT_2 000000BE

Symbol: DIGIT_2
   Definitions
      At line 156 in file teclado.s
   Uses
      At line 71 in file teclado.s
Comment: DIGIT_2 used once
DIGIT_2_STR 00000236

Symbol: DIGIT_2_STR
   Definitions
      At line 378 in file teclado.s
   Uses
      At line 161 in file teclado.s
Comment: DIGIT_2_STR used once
DIGIT_3 000000D8

Symbol: DIGIT_3



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 171 in file teclado.s
   Uses
      At line 89 in file teclado.s
Comment: DIGIT_3 used once
DIGIT_3_STR 00000238

Symbol: DIGIT_3_STR
   Definitions
      At line 379 in file teclado.s
   Uses
      At line 176 in file teclado.s
Comment: DIGIT_3_STR used once
DIGIT_4 000000F2

Symbol: DIGIT_4
   Definitions
      At line 186 in file teclado.s
   Uses
      At line 56 in file teclado.s
Comment: DIGIT_4 used once
DIGIT_4_STR 0000023A

Symbol: DIGIT_4_STR
   Definitions
      At line 380 in file teclado.s
   Uses
      At line 191 in file teclado.s
Comment: DIGIT_4_STR used once
DIGIT_5 0000010C

Symbol: DIGIT_5
   Definitions
      At line 201 in file teclado.s
   Uses
      At line 74 in file teclado.s
Comment: DIGIT_5 used once
DIGIT_5_STR 0000023C

Symbol: DIGIT_5_STR
   Definitions
      At line 381 in file teclado.s
   Uses
      At line 206 in file teclado.s
Comment: DIGIT_5_STR used once
DIGIT_6 00000126

Symbol: DIGIT_6
   Definitions
      At line 216 in file teclado.s
   Uses
      At line 92 in file teclado.s
Comment: DIGIT_6 used once
DIGIT_6_STR 0000023E

Symbol: DIGIT_6_STR
   Definitions
      At line 382 in file teclado.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 221 in file teclado.s
Comment: DIGIT_6_STR used once
DIGIT_7 00000140

Symbol: DIGIT_7
   Definitions
      At line 231 in file teclado.s
   Uses
      At line 59 in file teclado.s
Comment: DIGIT_7 used once
DIGIT_7_STR 00000240

Symbol: DIGIT_7_STR
   Definitions
      At line 383 in file teclado.s
   Uses
      At line 236 in file teclado.s
Comment: DIGIT_7_STR used once
DIGIT_8 0000015A

Symbol: DIGIT_8
   Definitions
      At line 246 in file teclado.s
   Uses
      At line 77 in file teclado.s
Comment: DIGIT_8 used once
DIGIT_8_STR 00000242

Symbol: DIGIT_8_STR
   Definitions
      At line 384 in file teclado.s
   Uses
      At line 251 in file teclado.s
Comment: DIGIT_8_STR used once
DIGIT_9 00000174

Symbol: DIGIT_9
   Definitions
      At line 261 in file teclado.s
   Uses
      At line 95 in file teclado.s
Comment: DIGIT_9 used once
DIGIT_9_STR 00000244

Symbol: DIGIT_9_STR
   Definitions
      At line 385 in file teclado.s
   Uses
      At line 266 in file teclado.s
Comment: DIGIT_9_STR used once
DIGIT_A 0000018E

Symbol: DIGIT_A
   Definitions
      At line 276 in file teclado.s
   Uses
      At line 107 in file teclado.s
Comment: DIGIT_A used once
DIGIT_AST 000001F6



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: DIGIT_AST
   Definitions
      At line 336 in file teclado.s
   Uses
      At line 62 in file teclado.s
Comment: DIGIT_AST used once
DIGIT_AST_STR 0000024E

Symbol: DIGIT_AST_STR
   Definitions
      At line 391 in file teclado.s
   Uses
      At line 341 in file teclado.s
Comment: DIGIT_AST_STR used once
DIGIT_A_STR 00000246

Symbol: DIGIT_A_STR
   Definitions
      At line 386 in file teclado.s
   Uses
      At line 281 in file teclado.s
Comment: DIGIT_A_STR used once
DIGIT_B 000001A8

Symbol: DIGIT_B
   Definitions
      At line 291 in file teclado.s
   Uses
      At line 110 in file teclado.s
Comment: DIGIT_B used once
DIGIT_B_STR 00000248

Symbol: DIGIT_B_STR
   Definitions
      At line 387 in file teclado.s
   Uses
      At line 296 in file teclado.s
Comment: DIGIT_B_STR used once
DIGIT_C 000001C2

Symbol: DIGIT_C
   Definitions
      At line 306 in file teclado.s
   Uses
      At line 113 in file teclado.s
Comment: DIGIT_C used once
DIGIT_C_STR 0000024A

Symbol: DIGIT_C_STR
   Definitions
      At line 388 in file teclado.s
   Uses
      At line 311 in file teclado.s
Comment: DIGIT_C_STR used once
DIGIT_D 000001DC

Symbol: DIGIT_D
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 321 in file teclado.s
   Uses
      At line 116 in file teclado.s
Comment: DIGIT_D used once
DIGIT_D_STR 0000024C

Symbol: DIGIT_D_STR
   Definitions
      At line 389 in file teclado.s
   Uses
      At line 326 in file teclado.s
Comment: DIGIT_D_STR used once
DIGIT_HASH 00000210

Symbol: DIGIT_HASH
   Definitions
      At line 351 in file teclado.s
   Uses
      At line 98 in file teclado.s
Comment: DIGIT_HASH used once
Debouncing 00000222

Symbol: Debouncing
   Definitions
      At line 366 in file teclado.s
   Uses
      At line 134 in file teclado.s
      At line 149 in file teclado.s
      At line 164 in file teclado.s
      At line 179 in file teclado.s
      At line 194 in file teclado.s
      At line 209 in file teclado.s
      At line 224 in file teclado.s
      At line 239 in file teclado.s
      At line 254 in file teclado.s
      At line 269 in file teclado.s
      At line 284 in file teclado.s
      At line 299 in file teclado.s
      At line 314 in file teclado.s
      At line 329 in file teclado.s
      At line 344 in file teclado.s
      At line 357 in file teclado.s

MapMatrixKeyboard 00000000

Symbol: MapMatrixKeyboard
   Definitions
      At line 44 in file teclado.s
   Uses
      At line 30 in file teclado.s
Comment: MapMatrixKeyboard used once
34 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

COFRE_FECHANDO 00000002

Symbol: COFRE_FECHANDO
   Definitions
      At line 12 in file teclado.s
   Uses
      At line 355 in file teclado.s
Comment: COFRE_FECHANDO used once
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

LCD_PrintString 00000000

Symbol: LCD_PrintString
   Definitions
      At line 36 in file teclado.s
   Uses
      At line 132 in file teclado.s
      At line 147 in file teclado.s
      At line 162 in file teclado.s
      At line 177 in file teclado.s
      At line 192 in file teclado.s
      At line 207 in file teclado.s
      At line 222 in file teclado.s
      At line 237 in file teclado.s
      At line 252 in file teclado.s
      At line 267 in file teclado.s
      At line 282 in file teclado.s
      At line 297 in file teclado.s
      At line 312 in file teclado.s
      At line 327 in file teclado.s
      At line 342 in file teclado.s

PortL_Input 00000000

Symbol: PortL_Input
   Definitions
      At line 35 in file teclado.s
   Uses
      At line 50 in file teclado.s
      At line 68 in file teclado.s
      At line 86 in file teclado.s
      At line 104 in file teclado.s

PortM_Output 00000000

Symbol: PortM_Output
   Definitions
      At line 34 in file teclado.s
   Uses
      At line 49 in file teclado.s
      At line 67 in file teclado.s
      At line 85 in file teclado.s
      At line 103 in file teclado.s

SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 37 in file teclado.s
   Uses
      At line 370 in file teclado.s
Comment: SysTick_Wait1ms used once
4 symbols
376 symbols in table
