


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Ver 1 19/03/2018
    5 00000000         ; Ver 2 26/08/2018
    6 00000000         ; Este programa deve esperar o usu?rio pressionar uma ch
                       ave.
    7 00000000         ; Caso o usu?rio pressione uma chave, um LED deve piscar
                        a cada 1 segundo.
    8 00000000         
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000                 THUMB                        ; Instru??es do tip
                                                            o Thumb-2
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         
   13 00000000         ; Declara??es EQU - Defines
   14 00000000         ;<NOME>         EQU <VALOR>
   15 00000000         ; ========================
   16 00000000         ; Defini??es de Valores
   17 00000000 00000100 
                       INVALID_DIGIT
                               EQU              256         ; Representa um d?g
                                                            ito inv?lido do tec
                                                            lado matricial
   18 00000000 FFFFFFFF 
                       INVALID_PW_CHAR
                               EQU              -1          ; Representa um car
                                                            actere impossível d
                                                            e estar na senha
   19 00000000         
   20 00000000 00000000 
                       INICIO  EQU              0
   21 00000000 00000001 
                       CONFIG_SENHA
                               EQU              1
   22 00000000 00000002 
                       COFRE_FECHANDO
                               EQU              2
   23 00000000 00000003 
                       COFRE_FECHADO
                               EQU              3
   24 00000000 00000004 
                       COFRE_ABRINDO
                               EQU              4
   25 00000000 00000005 
                       COFRE_TRAVADO
                               EQU              5
   26 00000000 00000006 
                       DESTRAVA_COFRE
                               EQU              6
   27 00000000 00000007 
                       CONFIG_SENHA_MESTRA
                               EQU              7
   28 00000000         
   29 00000000 20004000 
                       TABUADA_ADDR
                               EQU              0x20004000



ARM Macro Assembler    Page 2 


   30 00000000         
   31 00000000         
   32 00000000         
   33 00000000         ; ------------------------------------------------------
                       -------------------------
   34 00000000         ; ?rea de Dados - Declara??es de vari?veis
   35 00000000                 AREA             DATA, ALIGN=2
   36 00000000         ; Se alguma vari?vel for chamada em outro arquivo
   37 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       ri?vel <var> a 
   38 00000000         ; partir de outro arquivo
   39 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       vari?vel de nome <var>
   40 00000000         ; de <tam> bytes a partir da primeira 
   41 00000000         ; posi??o da RAM  
   42 00000000 00 00 00 
              00 00 00 
              00 00    PASSWORDS
                               SPACE            8           ; 4 bytes para a se
                                                            nha do usuário e 4 
                                                            bytes para a senha 
                                                            mestra
   43 00000008         ; ------------------------------------------------------
                       -------------------------
   44 00000008         ; ?rea de C?digo - Tudo abaixo da diretiva a seguir ser?
                        armazenado na mem?ria de 
   45 00000008         ;                  c?digo
   46 00000008                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   47 00000000         
   48 00000000         ; Se alguma fun??o do arquivo for chamada em outro arqui
                       vo 
   49 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            fun??o Start a part
                                                            ir de 
   50 00000000         ; outro arquivo. No caso startup.s
   51 00000000                 EXPORT           Pisca_Transistor_PP5
   52 00000000                 EXPORT           Build_String
   53 00000000         
   54 00000000         
   55 00000000         ; Se chamar alguma fun??o externa 
   56 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   57 00000000         ; fun??o <func>
   58 00000000                 IMPORT           PLL_Init
   59 00000000                 IMPORT           SysTick_Init
   60 00000000                 IMPORT           SysTick_Wait1ms
   61 00000000         
   62 00000000                 IMPORT           GPIO_Init
   63 00000000                 IMPORT           PortA_Output
   64 00000000                 IMPORT           PortP_Output
   65 00000000                 IMPORT           PortQ_Output
   66 00000000         
   67 00000000                 IMPORT           LCD_Init
   68 00000000                 IMPORT           LCD_Line2
   69 00000000                 IMPORT           LCD_Reset
   70 00000000                 IMPORT           LCD_PrintString
   71 00000000         
   72 00000000                 IMPORT           MapMatrixKeyboard



ARM Macro Assembler    Page 3 


   73 00000000                 IMPORT           LED_Output
   74 00000000         
   75 00000000 54 61 62 
              75 61 64 
              61 20 64 
              6F 20 00 inicio_string
                               DCB              "Tabuada do ", 0
   76 0000000C 20 58 20 
              00       char_multi
                               DCB              " X ", 0
   77 00000010 20 3D 20 
              00       char_equal
                               DCB              " = ", 0
   78 00000014 6E 00   char_n  DCB              "n", 0
   79 00000016 6D 00   char_m  DCB              "m", 0
   80 00000018         ; ------------------------------------------------------
                       -------------------------
   81 00000018         ; Fun??o main()
   82 00000018         Start
   83 00000018 F7FF FFFE       BL               PLL_Init    ; Chama a subrotina
                                                             para alterar o clo
                                                            ck do microcontrola
                                                            dor para 80MHz
   84 0000001C F7FF FFFE       BL               SysTick_Init ; Chama a subrotin
                                                            a para inicializar 
                                                            o SysTick
   85 00000020 F7FF FFFE       BL               GPIO_Init   ; Chama a subrotina
                                                             que inicializa os 
                                                            GPIO
   86 00000024         
   87 00000024 483D            LDR              R0, =TABUADA_ADDR ; Guarda na R
                                                            AM valores iniciais
                                                             da tabuada, do 0 a
                                                            o 9
   88 00000026 F04F 0609       MOV              R6, #9
   89 0000002A F800 6B01       STRB             R6, [R0], #1
   90 0000002E         
   91 0000002E F800 6B01       STRB             R6, [R0], #1
   92 00000032         
   93 00000032 F800 6B01       STRB             R6, [R0], #1
   94 00000036         
   95 00000036 F800 6B01       STRB             R6, [R0], #1
   96 0000003A         
   97 0000003A F800 6B01       STRB             R6, [R0], #1
   98 0000003E         
   99 0000003E F800 6B01       STRB             R6, [R0], #1
  100 00000042         
  101 00000042 F800 6B01       STRB             R6, [R0], #1
  102 00000046         
  103 00000046 F800 6B01       STRB             R6, [R0], #1
  104 0000004A         
  105 0000004A F800 6B01       STRB             R6, [R0], #1
  106 0000004E         
  107 0000004E 7006            STRB             R6, [R0]
  108 00000050         
  109 00000050 F7FF FFFE       BL               LCD_Init    ; Chama a subrotina
                                                             que inicializa o L
                                                            CD
  110 00000054 F000 F803       BL               EstadoInicial



ARM Macro Assembler    Page 4 


  111 00000058         
  112 00000058         MainLoop
  113 00000058 F7FF FFFE       BL               MapMatrixKeyboard
  114 0000005C E7FC            B                MainLoop
  115 0000005E         
  116 0000005E         EstadoInicial
  117 0000005E B500            PUSH             {LR}
  118 00000060 F7FF FFFE       BL               LCD_Reset
  119 00000064 4C2E            LDR              R4, =inicio_string ;R4 guarda a
                                                            s mensagens pra mos
                                                            trar no display
  120 00000066 F7FF FFFE       BL               LCD_PrintString 
                                                            ; imprime mensagem
  121 0000006A 4C2E            LDR              R4, =char_n
  122 0000006C F7FF FFFE       BL               LCD_PrintString
  123 00000070         
  124 00000070 F7FF FFFE       BL               LCD_Line2
  125 00000074         
  126 00000074 4C2B            LDR              R4, =char_n
  127 00000076 F7FF FFFE       BL               LCD_PrintString
  128 0000007A 4C2B            LDR              R4, =char_multi
  129 0000007C F7FF FFFE       BL               LCD_PrintString
  130 00000080 4C2A            LDR              R4, =char_m
  131 00000082 F7FF FFFE       BL               LCD_PrintString
  132 00000086 4C2A            LDR              R4, =char_equal
  133 00000088 F7FF FFFE       BL               LCD_PrintString
  134 0000008C         
  135 0000008C F44F 70FA       MOV              R0, #500
  136 00000090 F7FF FFFE       BL               SysTick_Wait1ms
  137 00000094         
  138 00000094 F85D EB04       POP              {LR}
  139 00000098 4770            BX               LR
  140 0000009A         
  141 0000009A         Pisca_Transistor_PP5
  142 0000009A F04F 0020       MOV              R0, #2_00100000
  143 0000009E B500            PUSH             {LR}
  144 000000A0 F7FF FFFE       BL               PortP_Output ; chama a subrotin
                                                            a para ativar o tra
                                                            nsistor
  145 000000A4 F44F 70FA       MOV              R0, #500
  146 000000A8 F7FF FFFE       BL               SysTick_Wait1ms
  147 000000AC F04F 0000       MOV              R0, #2_00000000
  148 000000B0 F7FF FFFE       BL               PortP_Output ; chama a subrotin
                                                            a para desativar o 
                                                            transistor
  149 000000B4 F44F 70FA       MOV              R0, #500
  150 000000B8 F7FF FFFE       BL               SysTick_Wait1ms
  151 000000BC F85D EB04       POP              {LR}
  152 000000C0 4770            BX               LR
  153 000000C2         
  154 000000C2         Build_String
  155 000000C2 B500            PUSH             {LR}
  156 000000C4 F7FF FFFE       BL               LCD_Reset
  157 000000C8 4C15            LDR              R4, =inicio_string ;R4 guarda a
                                                            s mensagens pra mos
                                                            trar no display
  158 000000CA F7FF FFFE       BL               LCD_PrintString 
                                                            ; imprime mensagem
  159 000000CE         



ARM Macro Assembler    Page 5 


  160 000000CE F04F 0400       MOV              R4, #0
  161 000000D2 462B            MOV              R3, R5
  162 000000D4 F103 0330       ADD              R3, #0x30   ;transforma a tecla
                                                             pressionada em str
                                                            ing
  163 000000D8 F7FF FFFE       BL               LCD_PrintString
  164 000000DC         
  165 000000DC F7FF FFFE       BL               LCD_Line2
  166 000000E0 F7FF FFFE       BL               LCD_PrintString
  167 000000E4         
  168 000000E4 4C10            LDR              R4, =char_multi
  169 000000E6 F7FF FFFE       BL               LCD_PrintString
  170 000000EA         
  171 000000EA F04F 0400       MOV              R4, #0
  172 000000EE 4633            MOV              R3, R6
  173 000000F0 F103 0330       ADD              R3, #0x30   ;transforma a tecla
                                                             pressionada em str
                                                            ing
  174 000000F4 F7FF FFFE       BL               LCD_PrintString
  175 000000F8         
  176 000000F8 4C0D            LDR              R4, =char_equal
  177 000000FA F7FF FFFE       BL               LCD_PrintString
  178 000000FE         
  179 000000FE F04F 0400       MOV              R4, #0
  180 00000102 463B            MOV              R3, R7
  181 00000104 F103 0330       ADD              R3, #0x30   ;transforma a tecla
                                                             pressionada em str
                                                            ing
  182 00000108 F7FF FFFE       BL               LCD_PrintString
  183 0000010C         
  184 0000010C F241 3088       MOV              R0, #5000
  185 00000110 F7FF FFFE       BL               SysTick_Wait1ms
  186 00000114         
  187 00000114 F85D EB04       POP              {LR}
  188 00000118 4770            BX               LR
  189 0000011A         
  190 0000011A         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  191 0000011A         ; Fim do Arquivo
  192 0000011A         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  193 0000011A 00 00           ALIGN                        ;Garante que o fim 
                                                            da se??o est? alinh
                                                            ada 
  194 0000011C                 END                          ;Fim do arquivo
              20004000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\main.d -o.\objects\main.o -IC:\Users\pedro\AppData\Local\Arm
\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1" -
-predefine="__UVISION_VERSION SETA 541" --predefine="TM4C1294NCPDT SETA 1" --li
st=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 35 in file main.s
   Uses
      None
Comment: DATA unused
PASSWORDS 00000000

Symbol: PASSWORDS
   Definitions
      At line 42 in file main.s
   Uses
      None
Comment: PASSWORDS unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 46 in file main.s
   Uses
      None
Comment: .text unused
Build_String 000000C2

Symbol: Build_String
   Definitions
      At line 154 in file main.s
   Uses
      At line 52 in file main.s
Comment: Build_String used once
EstadoInicial 0000005E

Symbol: EstadoInicial
   Definitions
      At line 116 in file main.s
   Uses
      At line 110 in file main.s
Comment: EstadoInicial used once
MainLoop 00000058

Symbol: MainLoop
   Definitions
      At line 112 in file main.s
   Uses
      At line 114 in file main.s
Comment: MainLoop used once
Pisca_Transistor_PP5 0000009A

Symbol: Pisca_Transistor_PP5
   Definitions
      At line 141 in file main.s
   Uses
      At line 51 in file main.s
Comment: Pisca_Transistor_PP5 used once
Start 00000018

Symbol: Start
   Definitions
      At line 82 in file main.s
   Uses
      At line 49 in file main.s
Comment: Start used once
char_equal 00000010

Symbol: char_equal
   Definitions
      At line 77 in file main.s
   Uses
      At line 132 in file main.s
      At line 176 in file main.s

char_m 00000016




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: char_m
   Definitions
      At line 79 in file main.s
   Uses
      At line 130 in file main.s
Comment: char_m used once
char_multi 0000000C

Symbol: char_multi
   Definitions
      At line 76 in file main.s
   Uses
      At line 128 in file main.s
      At line 168 in file main.s

char_n 00000014

Symbol: char_n
   Definitions
      At line 78 in file main.s
   Uses
      At line 121 in file main.s
      At line 126 in file main.s

inicio_string 00000000

Symbol: inicio_string
   Definitions
      At line 75 in file main.s
   Uses
      At line 119 in file main.s
      At line 157 in file main.s

11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

COFRE_ABRINDO 00000004

Symbol: COFRE_ABRINDO
   Definitions
      At line 24 in file main.s
   Uses
      None
Comment: COFRE_ABRINDO unused
COFRE_FECHADO 00000003

Symbol: COFRE_FECHADO
   Definitions
      At line 23 in file main.s
   Uses
      None
Comment: COFRE_FECHADO unused
COFRE_FECHANDO 00000002

Symbol: COFRE_FECHANDO
   Definitions
      At line 22 in file main.s
   Uses
      None
Comment: COFRE_FECHANDO unused
COFRE_TRAVADO 00000005

Symbol: COFRE_TRAVADO
   Definitions
      At line 25 in file main.s
   Uses
      None
Comment: COFRE_TRAVADO unused
CONFIG_SENHA 00000001

Symbol: CONFIG_SENHA
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: CONFIG_SENHA unused
CONFIG_SENHA_MESTRA 00000007

Symbol: CONFIG_SENHA_MESTRA
   Definitions
      At line 27 in file main.s
   Uses
      None
Comment: CONFIG_SENHA_MESTRA unused
DESTRAVA_COFRE 00000006

Symbol: DESTRAVA_COFRE
   Definitions
      At line 26 in file main.s
   Uses
      None
Comment: DESTRAVA_COFRE unused
INICIO 00000000

Symbol: INICIO



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 20 in file main.s
   Uses
      None
Comment: INICIO unused
INVALID_DIGIT 00000100

Symbol: INVALID_DIGIT
   Definitions
      At line 17 in file main.s
   Uses
      None
Comment: INVALID_DIGIT unused
INVALID_PW_CHAR FFFFFFFF

Symbol: INVALID_PW_CHAR
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: INVALID_PW_CHAR unused
TABUADA_ADDR 20004000

Symbol: TABUADA_ADDR
   Definitions
      At line 29 in file main.s
   Uses
      At line 87 in file main.s
Comment: TABUADA_ADDR used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 62 in file main.s
   Uses
      At line 85 in file main.s
Comment: GPIO_Init used once
LCD_Init 00000000

Symbol: LCD_Init
   Definitions
      At line 67 in file main.s
   Uses
      At line 109 in file main.s
Comment: LCD_Init used once
LCD_Line2 00000000

Symbol: LCD_Line2
   Definitions
      At line 68 in file main.s
   Uses
      At line 124 in file main.s
      At line 165 in file main.s

LCD_PrintString 00000000

Symbol: LCD_PrintString
   Definitions
      At line 70 in file main.s
   Uses
      At line 120 in file main.s
      At line 122 in file main.s
      At line 127 in file main.s
      At line 129 in file main.s
      At line 131 in file main.s
      At line 133 in file main.s
      At line 158 in file main.s
      At line 163 in file main.s
      At line 166 in file main.s
      At line 169 in file main.s
      At line 174 in file main.s
      At line 177 in file main.s
      At line 182 in file main.s

LCD_Reset 00000000

Symbol: LCD_Reset
   Definitions
      At line 69 in file main.s
   Uses
      At line 118 in file main.s
      At line 156 in file main.s

LED_Output 00000000

Symbol: LED_Output
   Definitions
      At line 73 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Uses
      None
Comment: LED_Output unused
MapMatrixKeyboard 00000000

Symbol: MapMatrixKeyboard
   Definitions
      At line 72 in file main.s
   Uses
      At line 113 in file main.s
Comment: MapMatrixKeyboard used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 58 in file main.s
   Uses
      At line 83 in file main.s
Comment: PLL_Init used once
PortA_Output 00000000

Symbol: PortA_Output
   Definitions
      At line 63 in file main.s
   Uses
      None
Comment: PortA_Output unused
PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 64 in file main.s
   Uses
      At line 144 in file main.s
      At line 148 in file main.s

PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 65 in file main.s
   Uses
      None
Comment: PortQ_Output unused
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 59 in file main.s
   Uses
      At line 84 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 60 in file main.s
   Uses
      At line 136 in file main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 146 in file main.s
      At line 150 in file main.s
      At line 185 in file main.s

13 symbols
373 symbols in table
