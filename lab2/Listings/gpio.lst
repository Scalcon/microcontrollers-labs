


ARM Macro Assembler    Page 1 


    1 00000000         ; gpio.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Template by Prof. Guilherme Peron - 24/08/2020
    4 00000000         
    5 00000000         ; ------------------------------------------------------
                       -------------------------
    6 00000000                 THUMB                        ; Instru??es do tip
                                                            o Thumb-2
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000         ; Declara??es EQU - Defines
    9 00000000         ; ========================
   10 00000000 00000100 
                       INVALID_DIGIT
                               EQU              256         ; Representa um d?g
                                                            ito inv?lido do tec
                                                            lado matricial
   11 00000000 FFFFFFFF 
                       INVALID_PW_CHAR
                               EQU              -1          ; Representa um car
                                                            actere impossível d
                                                            e estar na senha
   12 00000000         
   13 00000000         ; ========================
   14 00000000         ; Defini??es dos Registradores Gerais
   15 00000000         ; All register values were taken from tm4c1294ncpdt.h - 
                       TM4C1294NCPDT Register Definitions
   16 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   17 00000000 400FEA08 
                       SYSCTL_PRGPIO_R
                               EQU              0x400FEA08
   18 00000000         ; ========================
   19 00000000         ; Defini??es dos Ports
   20 00000000         
   21 00000000         ; PORT A
   22 00000000 40058520 
                       GPIO_PORTA_AHB_LOCK_R
                               EQU              0x40058520
   23 00000000 40058524 
                       GPIO_PORTA_AHB_CR_R
                               EQU              0x40058524
   24 00000000 40058528 
                       GPIO_PORTA_AHB_AMSEL_R
                               EQU              0x40058528
   25 00000000 4005852C 
                       GPIO_PORTA_AHB_PCTL_R
                               EQU              0x4005852C
   26 00000000 40058400 
                       GPIO_PORTA_AHB_DIR_R
                               EQU              0x40058400
   27 00000000 40058420 
                       GPIO_PORTA_AHB_AFSEL_R
                               EQU              0x40058420
   28 00000000 4005851C 
                       GPIO_PORTA_AHB_DEN_R
                               EQU              0x4005851C
   29 00000000 40058510 



ARM Macro Assembler    Page 2 


                       GPIO_PORTA_AHB_PUR_R
                               EQU              0x40058510
   30 00000000 400583FC 
                       GPIO_PORTA_AHB_DATA_R
                               EQU              0x400583FC
   31 00000000 40058000 
                       GPIO_PORTA_AHB_DATA_BITS_R
                               EQU              0x40058000
   32 00000000 00000001 
                       GPIO_PORTA
                               EQU              2_000000000000001 
                                                            ; SYSCTL_PPGPIO_P0
   33 00000000         
   34 00000000         ; PORT J
   35 00000000 40060520 
                       GPIO_PORTJ_AHB_LOCK_R
                               EQU              0x40060520
   36 00000000 40060524 
                       GPIO_PORTJ_AHB_CR_R
                               EQU              0x40060524
   37 00000000 40060528 
                       GPIO_PORTJ_AHB_AMSEL_R
                               EQU              0x40060528
   38 00000000 4006052C 
                       GPIO_PORTJ_AHB_PCTL_R
                               EQU              0x4006052C
   39 00000000 40060400 
                       GPIO_PORTJ_AHB_DIR_R
                               EQU              0x40060400
   40 00000000 40060420 
                       GPIO_PORTJ_AHB_AFSEL_R
                               EQU              0x40060420
   41 00000000 4006051C 
                       GPIO_PORTJ_AHB_DEN_R
                               EQU              0x4006051C
   42 00000000 40060510 
                       GPIO_PORTJ_AHB_PUR_R
                               EQU              0x40060510
   43 00000000 400603FC 
                       GPIO_PORTJ_AHB_DATA_R
                               EQU              0x400603FC
   44 00000000 40060000 
                       GPIO_PORTJ_AHB_DATA_BITS_R
                               EQU              0x40060000
   45 00000000 00000100 
                       GPIO_PORTJ
                               EQU              2_000000100000000 
                                                            ; SYSCTL_PPGPIO_P8
   46 00000000         
   47 00000000         ; PORT K
   48 00000000 40061520 
                       GPIO_PORTK_LOCK_R
                               EQU              0x40061520
   49 00000000 40061524 
                       GPIO_PORTK_CR_R
                               EQU              0x40061524
   50 00000000 40061528 
                       GPIO_PORTK_AMSEL_R
                               EQU              0x40061528



ARM Macro Assembler    Page 3 


   51 00000000 4006152C 
                       GPIO_PORTK_PCTL_R
                               EQU              0x4006152C
   52 00000000 40061400 
                       GPIO_PORTK_DIR_R
                               EQU              0x40061400
   53 00000000 40061420 
                       GPIO_PORTK_AFSEL_R
                               EQU              0x40061420
   54 00000000 4006151C 
                       GPIO_PORTK_DEN_R
                               EQU              0x4006151C
   55 00000000 40061510 
                       GPIO_PORTK_PUR_R
                               EQU              0x40061510
   56 00000000 400613FC 
                       GPIO_PORTK_DATA_R
                               EQU              0x400613FC
   57 00000000 40061000 
                       GPIO_PORTK_DATA_BITS_R
                               EQU              0x40061000
   58 00000000 00000200 
                       GPIO_PORTK
                               EQU              2_000001000000000 
                                                            ; SYSCTL_PPGPIO_P9
   59 00000000         
   60 00000000         ; PORT L
   61 00000000 40062520 
                       GPIO_PORTL_LOCK_R
                               EQU              0x40062520
   62 00000000 40062524 
                       GPIO_PORTL_CR_R
                               EQU              0x40062524
   63 00000000 40062528 
                       GPIO_PORTL_AMSEL_R
                               EQU              0x40062528
   64 00000000 4006252C 
                       GPIO_PORTL_PCTL_R
                               EQU              0x4006252C
   65 00000000 40062400 
                       GPIO_PORTL_DIR_R
                               EQU              0x40062400
   66 00000000 40062420 
                       GPIO_PORTL_AFSEL_R
                               EQU              0x40062420
   67 00000000 4006251C 
                       GPIO_PORTL_DEN_R
                               EQU              0x4006251C
   68 00000000 40062510 
                       GPIO_PORTL_PUR_R
                               EQU              0x40062510
   69 00000000 400623FC 
                       GPIO_PORTL_DATA_R
                               EQU              0x400623FC
   70 00000000 00000400 
                       GPIO_PORTL
                               EQU              2_000010000000000 
                                                            ; SYSCTL_PPGPIO_P10
                                                            



ARM Macro Assembler    Page 4 


   71 00000000         
   72 00000000         ; PORT M
   73 00000000 40063520 
                       GPIO_PORTM_LOCK_R
                               EQU              0x40063520
   74 00000000 40063524 
                       GPIO_PORTM_CR_R
                               EQU              0x40063524
   75 00000000 40063528 
                       GPIO_PORTM_AMSEL_R
                               EQU              0x40063528
   76 00000000 4006352C 
                       GPIO_PORTM_PCTL_R
                               EQU              0x4006352C
   77 00000000 40063400 
                       GPIO_PORTM_DIR_R
                               EQU              0x40063400
   78 00000000 40063420 
                       GPIO_PORTM_AFSEL_R
                               EQU              0x40063420
   79 00000000 4006351C 
                       GPIO_PORTM_DEN_R
                               EQU              0x4006351C
   80 00000000 40063510 
                       GPIO_PORTM_PUR_R
                               EQU              0x40063510
   81 00000000 400633FC 
                       GPIO_PORTM_DATA_R
                               EQU              0x400633FC
   82 00000000 00000800 
                       GPIO_PORTM
                               EQU              2_000100000000000 
                                                            ; SYSCTL_PPGPIO_P11
                                                            
   83 00000000         
   84 00000000         ; PORT P
   85 00000000 40065520 
                       GPIO_PORTP_LOCK_R
                               EQU              0x40065520
   86 00000000 40065524 
                       GPIO_PORTP_CR_R
                               EQU              0x40065524
   87 00000000 40065528 
                       GPIO_PORTP_AMSEL_R
                               EQU              0x40065528
   88 00000000 4006552C 
                       GPIO_PORTP_PCTL_R
                               EQU              0x4006552C
   89 00000000 40065400 
                       GPIO_PORTP_DIR_R
                               EQU              0x40065400
   90 00000000 40065420 
                       GPIO_PORTP_AFSEL_R
                               EQU              0x40065420
   91 00000000 4006551C 
                       GPIO_PORTP_DEN_R
                               EQU              0x4006551C
   92 00000000 40065510 
                       GPIO_PORTP_PUR_R



ARM Macro Assembler    Page 5 


                               EQU              0x40065510
   93 00000000 400653FC 
                       GPIO_PORTP_DATA_R
                               EQU              0x400653FC
   94 00000000 40065000 
                       GPIO_PORTP_DATA_BITS_R
                               EQU              0x40065000
   95 00000000 00002000 
                       GPIO_PORTP
                               EQU              2_010000000000000 
                                                            ; SYSCTL_PPGPIO_P13
                                                            
   96 00000000         
   97 00000000         ; PORT Q
   98 00000000 40066520 
                       GPIO_PORTQ_LOCK_R
                               EQU              0x40066520
   99 00000000 40066524 
                       GPIO_PORTQ_CR_R
                               EQU              0x40066524
  100 00000000 40066528 
                       GPIO_PORTQ_AMSEL_R
                               EQU              0x40066528
  101 00000000 4006652C 
                       GPIO_PORTQ_PCTL_R
                               EQU              0x4006652C
  102 00000000 40066400 
                       GPIO_PORTQ_DIR_R
                               EQU              0x40066400
  103 00000000 40066420 
                       GPIO_PORTQ_AFSEL_R
                               EQU              0x40066420
  104 00000000 4006651C 
                       GPIO_PORTQ_DEN_R
                               EQU              0x4006651C
  105 00000000 40066510 
                       GPIO_PORTQ_PUR_R
                               EQU              0x40066510
  106 00000000 400663FC 
                       GPIO_PORTQ_DATA_R
                               EQU              0x400663FC
  107 00000000 40066000 
                       GPIO_PORTQ_DATA_BITS_R
                               EQU              0x40066000
  108 00000000 00004000 
                       GPIO_PORTQ
                               EQU              2_100000000000000 
                                                            ; SYSCTL_PPGPIO_P14
                                                            
  109 00000000         
  110 00000000         ; Interrup??es
  111 00000000         
  112 00000000         ; PORT J Interrup??o
  113 00000000 40060404 
                       GPIO_PORTJ_IS_R
                               EQU              0x40060404
  114 00000000 40060408 
                       GPIO_PORTJ_IBE_R
                               EQU              0x40060408



ARM Macro Assembler    Page 6 


  115 00000000 4006040C 
                       GPIO_PORTJ_IEV_R
                               EQU              0x4006040C
  116 00000000 40060410 
                       GPIO_PORTJ_IM_R
                               EQU              0x40060410
  117 00000000 4006041C 
                       GPIO_PORTJ_ICR_R
                               EQU              0x4006041C
  118 00000000 40060414 
                       GPIO_PORTJ_RIS_R
                               EQU              0x40060414
  119 00000000 E000E430 
                       NVIC_PRI12_R
                               EQU              0xE000E430
  120 00000000 E000E104 
                       NVIC_EN1_R
                               EQU              0xE000E104
  121 00000000         
  122 00000000         ; ------------------------------------------------------
                       -------------------------
  123 00000000         ; ?rea de C?digo - Tudo abaixo da diretiva a seguir ser?
                        armazenado na mem?ria de 
  124 00000000         ;                  c?digo
  125 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
  126 00000000         
  127 00000000         ; Se alguma fun??o do arquivo for chamada em outro arqui
                       vo 
  128 00000000                 EXPORT           GPIO_Init   ; Permite chamar GP
                                                            IO_Init de outro ar
                                                            quivo
  129 00000000                 EXPORT           PortA_Output ; Permite chamar P
                                                            ortA_Output de outr
                                                            o arquivo
  130 00000000                 EXPORT           PortJ_Input ; Permite chamar Po
                                                            rtJ_Input de outro 
                                                            arquivo
  131 00000000                 EXPORT           PortK_Output ; Permite chamar P
                                                            ortK_Output de outr
                                                            o arquivo
  132 00000000                 EXPORT           PortL_Input ; Permite chamar Po
                                                            rtL_Input de outro 
                                                            arquivo
  133 00000000                 EXPORT           PortM_Input ; Permite chamar Po
                                                            rtM_Input de outro 
                                                            arquivo
  134 00000000                 EXPORT           PortM_Output ; Permite chamar P
                                                            ortM_Output de outr
                                                            o arquivo
  135 00000000                 EXPORT           PortP_Output ; Permite chamar P
                                                            ortP_Output de outr
                                                            o arquivo
  136 00000000                 EXPORT           PortQ_Output ; Permite chamar P
                                                            ortQ_Output de outr
                                                            o arquivo
  137 00000000                 EXPORT           LED_Output
  138 00000000                 EXPORT           PortM_Change_Dir ; Permite cham
                                                            ar PortM_Change_Dir



ARM Macro Assembler    Page 7 


                                                             de outro arquivo
  139 00000000         
  140 00000000         ; Se chamar alguma fun??o externa
  141 00000000         
  142 00000000                 IMPORT           Pisca_Transistor_PP5
  143 00000000         
  144 00000000         
  145 00000000         ;-------------------------------------------------------
                       -------------------------
  146 00000000         ; Fun??o GPIO_Init
  147 00000000         ; Par?metro de entrada: N?o tem
  148 00000000         ; Par?metro de sa?da: N?o tem
  149 00000000         GPIO_Init
  150 00000000         ;=====================
  151 00000000         ; 1. Ativar o clock para a porta setando o bit correspon
                       dente no registrador RCGCGPIO,
  152 00000000         ; ap?s isso verificar no PRGPIO se a porta est? pronta p
                       ara uso.
  153 00000000         ; enable clock to GPIOF at clock gating register
  154 00000000 4882            LDR              R0, =SYSCTL_RCGCGPIO_R ; Carreg
                                                            a o endere?o do reg
                                                            istrador RCGCGPIO
  155 00000002 F04F 0101       MOV              R1, #GPIO_PORTA ; Seta o bit da
                                                             porta A
  156 00000006 F441 7180       ORR              R1, #GPIO_PORTJ ; Seta o bit da
                                                             porta J, fazendo c
                                                            om OR
  157 0000000A F441 7100       ORR              R1, #GPIO_PORTK ; Seta o bit da
                                                             porta K, fazendo c
                                                            om OR
  158 0000000E F441 6180       ORR              R1, #GPIO_PORTL ; Seta o bit da
                                                             porta L, fazendo c
                                                            om OR
  159 00000012 F441 6100       ORR              R1, #GPIO_PORTM ; Seta o bit da
                                                             porta M, fazendo c
                                                            om OR
  160 00000016 F441 5100       ORR              R1, #GPIO_PORTP ; Seta o bit da
                                                             porta P, fazendo c
                                                            om OR
  161 0000001A F441 4180       ORR              R1, #GPIO_PORTQ ; Seta o bit da
                                                             porta Q, fazendo c
                                                            om OR
  162 0000001E 6001            STR              R1, [R0]    ; Move para a mem?r
                                                            ia os bits das port
                                                            as no endere?o do R
                                                            CGCGPIO
  163 00000020         
  164 00000020 487B            LDR              R0, =SYSCTL_PRGPIO_R ; Carrega 
                                                            o endere?o do PRGPI
                                                            O para esperar os G
                                                            PIO ficarem prontos
                                                            
  165 00000022 6801    EsperaGPIO
                               LDR              R1, [R0]    ; L? da mem?ria o c
                                                            onte?do do endere?o
                                                             do registrador
  166 00000024 F04F 0201       MOV              R2, #GPIO_PORTA ; Seta os bits 
                                                            correspondentes ?s 
                                                            portas para fazer a



ARM Macro Assembler    Page 8 


                                                             compara??o - Seta 
                                                            o bit da porta A
  167 00000028 F442 7280       ORR              R2, #GPIO_PORTJ ; Seta o bit da
                                                             porta J, fazendo c
                                                            om OR
  168 0000002C F442 7200       ORR              R2, #GPIO_PORTK ; Seta o bit da
                                                             porta K, fazendo c
                                                            om OR
  169 00000030 F442 6280       ORR              R2, #GPIO_PORTL ; Seta o bit da
                                                             porta L, fazendo c
                                                            om OR
  170 00000034 F442 6200       ORR              R2, #GPIO_PORTM ; Seta o bit da
                                                             porta M, fazendo c
                                                            om OR
  171 00000038 F442 5200       ORR              R2, #GPIO_PORTP ; Seta o bit da
                                                             porta P, fazendo c
                                                            om OR
  172 0000003C F442 4280       ORR              R2, #GPIO_PORTQ ; Seta o bit da
                                                             porta Q, fazendo c
                                                            om OR
  173 00000040 4211            TST              R1, R2      ; Testa o R1 com R2
                                                             fazendo R1 & R2
  174 00000042 D0EE            BEQ              EsperaGPIO  ; Se o flag Z=1, vo
                                                            lta para o la?o. Se
                                                            n?o continua execut
                                                            ando
  175 00000044         
  176 00000044         ; 2. Limpar o AMSEL para desabilitar a analogica
  177 00000044 F04F 0100       MOV              R1, #0x00   ; Colocar 0 no regi
                                                            strador para desabi
                                                            litar a fun??o anal
                                                            ?gica
  178 00000048 4872            LDR              R0, =GPIO_PORTA_AHB_AMSEL_R ; C
                                                            arrega o R0 com o e
                                                            ndere?o do AMSEL pa
                                                            ra a porta A
  179 0000004A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             A da mem?ria
  180 0000004C         
  181 0000004C 4872            LDR              R0, =GPIO_PORTJ_AHB_AMSEL_R ; C
                                                            arrega o R0 com o e
                                                            ndere?o do AMSEL pa
                                                            ra a porta J
  182 0000004E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             J da mem?ria
  183 00000050         
  184 00000050 4872            LDR              R0, =GPIO_PORTK_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            e?o do AMSEL para a
                                                             porta K
  185 00000052 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             K da mem?ria
  186 00000054         
  187 00000054 4872            LDR              R0, =GPIO_PORTL_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            e?o do AMSEL para a



ARM Macro Assembler    Page 9 


                                                             porta L
  188 00000056 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             L da mem?ria
  189 00000058         
  190 00000058 4872            LDR              R0, =GPIO_PORTM_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            e?o do AMSEL para a
                                                             porta M
  191 0000005A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             M da mem?ria
  192 0000005C         
  193 0000005C 4872            LDR              R0, =GPIO_PORTP_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            e?o do AMSEL para a
                                                             porta P
  194 0000005E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             P da mem?ria
  195 00000060         
  196 00000060 4872            LDR              R0, =GPIO_PORTQ_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            e?o do AMSEL para a
                                                             porta Q
  197 00000062 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             Q da mem?ria
  198 00000064         
  199 00000064         ; 3. Limpar PCTL para selecionar o GPIO
  200 00000064 F04F 0100       MOV              R1, #0x00   ; Colocar 0 no regi
                                                            strador para seleci
                                                            onar o modo GPIO
  201 00000068 4871            LDR              R0, =GPIO_PORTA_AHB_PCTL_R ; Ca
                                                            rrega o R0 com o en
                                                            dere?o do PCTL para
                                                             a porta A
  202 0000006A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            A da mem?ria
  203 0000006C         
  204 0000006C 4871            LDR              R0, =GPIO_PORTJ_AHB_PCTL_R ; Ca
                                                            rrega o R0 com o en
                                                            dere?o do PCTL para
                                                             a porta J
  205 0000006E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            J da mem?ria
  206 00000070         
  207 00000070 4871            LDR              R0, =GPIO_PORTK_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ?o do PCTL para a p
                                                            orta K
  208 00000072 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            K da mem?ria
  209 00000074         
  210 00000074 4871            LDR              R0, =GPIO_PORTL_PCTL_R ; Carreg
                                                            a o R0 com o endere



ARM Macro Assembler    Page 10 


                                                            ?o do PCTL para a p
                                                            orta L
  211 00000076 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            L da mem?ria
  212 00000078         
  213 00000078 4871            LDR              R0, =GPIO_PORTM_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ?o do PCTL para a p
                                                            orta M
  214 0000007A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            M da mem?ria
  215 0000007C         
  216 0000007C 4871            LDR              R0, =GPIO_PORTP_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ?o do PCTL para a p
                                                            orta P
  217 0000007E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            P da mem?ria
  218 00000080         
  219 00000080 4871            LDR              R0, =GPIO_PORTQ_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ?o do PCTL para a p
                                                            orta Q
  220 00000082 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            Q da mem?ria
  221 00000084         
  222 00000084         ; 4. DIR para 0 se for entrada, 1 se for sa?da
  223 00000084 4871            LDR              R0, =GPIO_PORTA_AHB_DIR_R ; Car
                                                            rega o R0 com o end
                                                            ere?o do DIR para a
                                                             porta A
  224 00000086 F04F 01F0       MOV              R1, #2_11110000 ; PA7:PA4
  225 0000008A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  226 0000008C         
  227 0000008C         ; O certo era verificar os outros bits da PJ para n?o tr
                       ansformar entradas em sa?das desnecess?rias
  228 0000008C 4870            LDR              R0, =GPIO_PORTJ_AHB_DIR_R ; Car
                                                            rega o R0 com o end
                                                            ere?o do DIR para a
                                                             porta J
  229 0000008E F04F 0100       MOV              R1, #2_00000000 ; PJ0
  230 00000092 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            J da mem?ria
  231 00000094         
  232 00000094 486F            LDR              R0, =GPIO_PORTK_DIR_R ; Carrega
                                                             o R0 com o endere?
                                                            o do DIR para a por
                                                            ta K
  233 00000096 F04F 01FF       MOV              R1, #2_11111111 ; PK7:PK0
  234 0000009A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  235 0000009C         
  236 0000009C 486E            LDR              R0, =GPIO_PORTL_DIR_R ; Carrega



ARM Macro Assembler    Page 11 


                                                             o R0 com o endere?
                                                            o do DIR para a por
                                                            ta L
  237 0000009E F04F 0100       MOV              R1, #2_00000000 ; PL3:PL0
  238 000000A2 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  239 000000A4         
  240 000000A4 486D            LDR              R0, =GPIO_PORTM_DIR_R ; Carrega
                                                             o R0 com o endere?
                                                            o do DIR para a por
                                                            ta M
  241 000000A6 F04F 0107       MOV              R1, #2_00000111 
                                                            ; PM7:PM4 e PM2:PM0
                                                            
  242 000000AA 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  243 000000AC         
  244 000000AC 486C            LDR              R0, =GPIO_PORTP_DIR_R ; Carrega
                                                             o R0 com o endere?
                                                            o do DIR para a por
                                                            ta P
  245 000000AE F04F 0120       MOV              R1, #2_00100000 ; PP5
  246 000000B2 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  247 000000B4         
  248 000000B4 486B            LDR              R0, =GPIO_PORTQ_DIR_R ; Carrega
                                                             o R0 com o endere?
                                                            o do DIR para a por
                                                            ta Q
  249 000000B6 F04F 010F       MOV              R1, #2_00001111 ; PQ3:PQ0
  250 000000BA 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  251 000000BC         
  252 000000BC         ; 5. Limpar os bits AFSEL para 0 para selecionar GPIO 
  253 000000BC         ;    Sem fun??o alternativa
  254 000000BC F04F 0100       MOV              R1, #0x00   ; Colocar o valor 0
                                                             para n?o setar fun
                                                            ??o alternativa
  255 000000C0         
  256 000000C0 4869            LDR              R0, =GPIO_PORTA_AHB_AFSEL_R ; C
                                                            arrega o endere?o d
                                                            o AFSEL da porta A
  257 000000C2 6001            STR              R1, [R0]    ; Escreve na porta
  258 000000C4         
  259 000000C4 4869            LDR              R0, =GPIO_PORTJ_AHB_AFSEL_R ; C
                                                            arrega o endere?o d
                                                            o AFSEL da porta J
  260 000000C6 6001            STR              R1, [R0]    ; Escreve na porta
  261 000000C8         
  262 000000C8 4869            LDR              R0, =GPIO_PORTK_AFSEL_R ; Carre
                                                            ga o endere?o do AF
                                                            SEL da porta K
  263 000000CA 6001            STR              R1, [R0]    ; Escreve na porta
  264 000000CC         
  265 000000CC 4869            LDR              R0, =GPIO_PORTL_AFSEL_R ; Carre
                                                            ga o endere?o do AF
                                                            SEL da porta L
  266 000000CE 6001            STR              R1, [R0]    ; Escreve na porta
  267 000000D0         



ARM Macro Assembler    Page 12 


  268 000000D0 4869            LDR              R0, =GPIO_PORTM_AFSEL_R ; Carre
                                                            ga o endere?o do AF
                                                            SEL da porta M
  269 000000D2 6001            STR              R1, [R0]    ; Escreve na porta
  270 000000D4         
  271 000000D4 4869            LDR              R0, =GPIO_PORTP_AFSEL_R ; Carre
                                                            ga o endere?o do AF
                                                            SEL da porta P
  272 000000D6 6001            STR              R1, [R0]    ; Escreve na porta
  273 000000D8         
  274 000000D8 4869            LDR              R0, =GPIO_PORTQ_AFSEL_R ; Carre
                                                            ga o endere?o do AF
                                                            SEL da porta Q
  275 000000DA 6001            STR              R1, [R0]    ; Escreve na porta
  276 000000DC         
  277 000000DC         ; 6. Setar os bits de DEN para habilitar I/O digital
  278 000000DC         ; Escrita amig?vel - Read-modify-write
  279 000000DC 4869            LDR              R0, =GPIO_PORTA_AHB_DEN_R ; Car
                                                            rega o endere?o do 
                                                            DEN
  280 000000DE 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  281 000000E0 F041 01F0       ORR              R1, R1, #2_11110000 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PA7:PA4
  282 000000E4 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  283 000000E6         
  284 000000E6 4868            LDR              R0, =GPIO_PORTJ_AHB_DEN_R ; Car
                                                            rega o endere?o do 
                                                            DEN
  285 000000E8 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  286 000000EA F041 0103       ORR              R1, R1, #2_00000011 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PJ0
  287 000000EE 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  288 000000F0         
  289 000000F0 4866            LDR              R0, =GPIO_PORTK_DEN_R ; Carrega
                                                             o endere?o do DEN
  290 000000F2 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  291 000000F4 F041 01FF       ORR              R1, R1, #2_11111111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PK7:PK0



ARM Macro Assembler    Page 13 


  292 000000F8 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  293 000000FA         
  294 000000FA 4865            LDR              R0, =GPIO_PORTL_DEN_R ; Carrega
                                                             o endere?o do DEN
  295 000000FC 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  296 000000FE F041 010F       ORR              R1, R1, #2_00001111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PL3:PL0
  297 00000102 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  298 00000104         
  299 00000104 4863            LDR              R0, =GPIO_PORTM_DEN_R ; Carrega
                                                             o endere?o do DEN
  300 00000106 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  301 00000108 F041 01F7       ORR              R1, R1, #2_11110111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PM7:PM4 e PM2:PM
                                                            0
  302 0000010C 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  303 0000010E         
  304 0000010E 4862            LDR              R0, =GPIO_PORTP_DEN_R ; Carrega
                                                             o endere?o do DEN
  305 00000110 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  306 00000112 F041 0120       ORR              R1, R1, #2_00100000 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PP5
  307 00000116 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  308 00000118         
  309 00000118 4860            LDR              R0, =GPIO_PORTQ_DEN_R ; Carrega
                                                             o endere?o do DEN
  310 0000011A 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  311 0000011C F041 010F       ORR              R1, R1, #2_00001111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter



ARM Macro Assembler    Page 14 


                                                            iores e setar somen
                                                            te PQ3:PQ0
  312 00000120 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  313 00000122         
  314 00000122         ; 7. Para habilitar resistor de pull-up interno, setar P
                       UR para 1
  315 00000122 485F            LDR              R0, =GPIO_PORTJ_AHB_PUR_R ; Car
                                                            rega o endere?o do 
                                                            PUR para a porta J
  316 00000124 F04F 0103       MOV              R1, #2_0011 ; Habilitar funcion
                                                            alidade digital de 
                                                            resistor de pull-up
                                                             PJ0
  317 00000128 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria do
                                                             resistor de pull-u
                                                            p
  318 0000012A         
  319 0000012A 485E            LDR              R0, =GPIO_PORTL_PUR_R ; Carrega
                                                             o endere?o do PUR 
                                                            para a porta L
  320 0000012C F04F 010F       MOV              R1, #2_1111 ; Habilitar funcion
                                                            alidade digital de 
                                                            resistor de pull-up
                                                             PL3:PL0
  321 00000130 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria do
                                                             resistor de pull-u
                                                            p
  322 00000132         
  323 00000132         ; 8. Interrup??es
  324 00000132 495D            LDR              R1, =GPIO_PORTJ_IM_R
  325 00000134 F04F 0000       MOV              R0, #2_00000000 ; Desabilita a 
                                                            interrup??o na port
                                                            a J0
  326 00000138 6008            STR              R0, [R1]
  327 0000013A         
  328 0000013A F04F 0100       MOV              R1, #2_00000000
  329 0000013E 485B            LDR              R0, =GPIO_PORTJ_IS_R ; 0 para i
                                                            nterrup??o de borda
                                                             e 1 para n?vel
  330 00000140 6001            STR              R1, [R0]
  331 00000142         
  332 00000142 F04F 0100       MOV              R1, #2_00000000
  333 00000146 485A            LDR              R0, =GPIO_PORTJ_IBE_R ; 0 para 
                                                            borda ?nica
  334 00000148 6001            STR              R1, [R0]
  335 0000014A         
  336 0000014A F04F 0102       MOV              R1, #2_00000010
  337 0000014E 4859            LDR              R0, =GPIO_PORTJ_IEV_R ; 1 para 
                                                            borda de subida
  338 00000150 6001            STR              R1, [R0]
  339 00000152         
  340 00000152 4959            LDR              R1, =GPIO_PORTJ_ICR_R ; Configu
                                                            ra a interrup??o na
                                                             porta PJ0



ARM Macro Assembler    Page 15 


  341 00000154 F04F 0003       MOV              R0, #2_00000011
  342 00000158 6008            STR              R0, [R1]
  343 0000015A         
  344 0000015A 4953            LDR              R1, =GPIO_PORTJ_IM_R ; Habilita
                                                             a interrup??o na p
                                                            orta J0
  345 0000015C F04F 0003       MOV              R0, #2_00000011
  346 00000160 6008            STR              R0, [R1]
  347 00000162         
  348 00000162 4956            LDR              R1, =NVIC_EN1_R ; Habilita a in
                                                            terrup??o no PortJ
  349 00000164 F04F 0001       MOV              R0, #1
  350 00000168 EA4F 40C0       LSL              R0, R0, #19
  351 0000016C 6008            STR              R0, [R1]
  352 0000016E         
  353 0000016E 4954            LDR              R1, =NVIC_PRI12_R ; Configura p
                                                            rioridade 5 nos bit
                                                            s 29 a 31
  354 00000170 F04F 0005       MOV              R0, #5
  355 00000174 EA4F 7040       LSL              R0, R0, #29
  356 00000178 6008            STR              R0, [R1]
  357 0000017A         
  358 0000017A         
  359 0000017A 4770            BX               LR
  360 0000017C         
  361 0000017C         ; ------------------------------------------------------
                       -------------------------
  362 0000017C         ; Fun??o PortA_Output
  363 0000017C         ; Par?metro de entrada: R0
  364 0000017C         ; Par?metro de sa?da: N?o tem
  365 0000017C         PortA_Output
  366 0000017C 4951            LDR              R1, =GPIO_PORTA_AHB_DATA_R ; Ca
                                                            rrega o valor do of
                                                            fset do data regist
                                                            er
  367 0000017E         ; Read-Modify-Write para escrita
  368 0000017E 680A            LDR              R2, [R1]
  369 00000180 F022 02F0       BIC              R2, #2_11110000 ; M?scara com b
                                                            its 1 nas posi??es 
                                                            que queremos limpar
                                                             PA7:PA4
  370 00000184 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            par?metro de entrad
                                                            a
  371 00000188 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            A
  372 0000018A 4770            BX               LR          ; Retorna
  373 0000018C         
  374 0000018C         ; Fun??o PortJ_Input
  375 0000018C         ; Par?metro de entrada: N?o tem
  376 0000018C         ; Par?metro de sa?da: R0 --> o valor da leitura
  377 0000018C         PortJ_Input
  378 0000018C 494E            LDR              R1, =GPIO_PORTJ_AHB_DATA_R ; Ca
                                                            rrega o valor do of
                                                            fset do data regist
                                                            er
  379 0000018E 6808            LDR              R0, [R1]    ; L? no barramento 
                                                            de dados dos pinos



ARM Macro Assembler    Page 16 


  380 00000190 4770            BX               LR          ; Retorna
  381 00000192         
  382 00000192         ; Fun??o PortK_Output
  383 00000192         ; Par?metro de entrada: R0
  384 00000192         ; Par?metro de sa?da:  N?o tem
  385 00000192         PortK_Output
  386 00000192 494E            LDR              R1, =GPIO_PORTK_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  387 00000194         ; Read-Modify-Write para escrita
  388 00000194 680A            LDR              R2, [R1]
  389 00000196 F022 02FF       BIC              R2, #2_11111111 ; M?scara com b
                                                            its 1 nas posi??es 
                                                            que queremos limpar
                                                             PK7:PK0
  390 0000019A EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            par?metro de entrad
                                                            a
  391 0000019E 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            K
  392 000001A0 4770            BX               LR          ; Retorna
  393 000001A2         
  394 000001A2         ; Fun??o PortL_Input
  395 000001A2         ; Par?metro de entrada: N?o tem
  396 000001A2         ; Par?metro de sa?da: R0 --> o valor da leitura
  397 000001A2         PortL_Input
  398 000001A2 494B            LDR              R1, =GPIO_PORTL_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  399 000001A4 6808            LDR              R0, [R1]    ; L? no barramento 
                                                            de dados dos pinos
  400 000001A6 4770            BX               LR          ; Retorna
  401 000001A8         
  402 000001A8         ; Fun??o PortM_Output
  403 000001A8         ; Par?metro de entrada: R0
  404 000001A8         ; Par?metro de sa?da:  N?o tem
  405 000001A8         PortM_Output
  406 000001A8 494A            LDR              R1, =GPIO_PORTM_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  407 000001AA         ; Read-Modify-Write para escrita
  408 000001AA 680A            LDR              R2, [R1]
  409 000001AC F022 02F7       BIC              R2, #2_11110111 ; M?scara com b
                                                            its 1 nas posi??es 
                                                            que queremos limpar
                                                             PM7:PM4 e PM3:PM0
  410 000001B0 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            par?metro de entrad
                                                            a
  411 000001B4 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            M
  412 000001B6 4770            BX               LR
  413 000001B8         
  414 000001B8         ; Retorna
  415 000001B8         ; Funcao PortM_Change_Dir
  416 000001B8         ; Parametro de entrada: R0
  417 000001B8         ; Parametro de saida: Nao tem



ARM Macro Assembler    Page 17 


  418 000001B8         PortM_Change_Dir
  419 000001B8 4928            LDR              R1, =GPIO_PORTM_DIR_R ; Endereç
                                                            o do registrador de
                                                             direção da porta M
                                                            
  420 000001BA         ; Read-Modify-Write para escrita
  421 000001BA 680A            LDR              R2, [R1]    ; Lê o valor atual 
                                                            da direção das port
                                                            as
  422 000001BC F002 0207       AND              R2, #2_00000111 ; Limpa as colu
                                                            nas PM7 a PM4 (para
                                                             garantir que todas
                                                             as colunas começam
                                                             com direção de ent
                                                            rada)
  423 000001C0 EA42 0200       ORR              R2, R0      ; OR com a máscara 
                                                            que foi passada em 
                                                            R0 (direção desejad
                                                            a)
  424 000001C4 600A            STR              R2, [R1]    ; Atualiza o regist
                                                            rador de direção co
                                                            m o novo valor
  425 000001C6         
  426 000001C6 4770            BX               LR          ; Retorna da função
                                                            
  427 000001C8         
  428 000001C8         ; Funcao PortM_Input
  429 000001C8         ; Parametro de entrada: Nao tem
  430 000001C8         ; Parametro de saida: R0 -- valor da leitura
  431 000001C8         PortM_Input
  432 000001C8 4942            LDR              R1, =GPIO_PORTM_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  433 000001CA 6808            LDR              R0, [R1]    ; L? no barramento 
                                                            de dados dos pinos
  434 000001CC 4770            BX               LR
  435 000001CE         
  436 000001CE         ; Fun??o PortP_Output
  437 000001CE         ; Par?metro de entrada: R0
  438 000001CE         ; Par?metro de sa?da:  N?o tem
  439 000001CE         PortP_Output
  440 000001CE 4942            LDR              R1, =GPIO_PORTP_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  441 000001D0         ; Read-Modify-Write para escrita
  442 000001D0 680A            LDR              R2, [R1]
  443 000001D2 F022 0220       BIC              R2, #2_00100000 ; M?scara com b
                                                            its 1 nas posi??es 
                                                            que queremos limpar
                                                             PP5
  444 000001D6 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            par?metro de entrad
                                                            a
  445 000001DA 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            P
  446 000001DC 4770            BX               LR          ; Retorna
  447 000001DE         
  448 000001DE         ; Fun??o PortQ_Output



ARM Macro Assembler    Page 18 


  449 000001DE         ; Par?metro de entrada: R0
  450 000001DE         ; Par?metro de sa?da: N?o tem
  451 000001DE         PortQ_Output
  452 000001DE 493F            LDR              R1, =GPIO_PORTQ_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  453 000001E0         ; Read-Modify-Write para escrita
  454 000001E0 680A            LDR              R2, [R1]
  455 000001E2 F022 020F       BIC              R2, #2_00001111 ; M?scara com b
                                                            its 1 nas posi??es 
                                                            que queremos limpar
                                                             PQ3:PQ0
  456 000001E6 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            par?metro de entrad
                                                            a
  457 000001EA 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            Q
  458 000001EC 4770            BX               LR          ; Retorna
  459 000001EE         
  460 000001EE         LED_Output
  461 000001EE B500            PUSH             {LR}
  462 000001F0 4934            LDR              R1, =GPIO_PORTA_AHB_DATA_R ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r
  463 000001F2 4A3A            LDR              R2, =GPIO_PORTQ_DATA_R ;Carrega
                                                             o valor do offset 
                                                            do data register
  464 000001F4         
  465 000001F4 680B            LDR              R3, [R1]
  466 000001F6 6810            LDR              R0, [R2]
  467 000001F8         
  468 000001F8 BF04 23F0       MOVEQ            R3, #2_11110000 ;carrega em R3 
                                                            e R4 os bits dos le
                                                            ds que devem piscar
                                                            
  469 000001FC 200F            MOVEQ            R0, #2_00001111
  470 000001FE         
  471 000001FE 600B            STR              R3, [R1]    ; carrega no DATA d
                                                            o portA o bit do le
                                                            d da esquerda que d
                                                            eve piscar
  472 00000200 6010            STR              R0, [R2]    ; carrega no DATA d
                                                            o portQ o bit do le
                                                            d da direita que de
                                                            ve piscar
  473 00000202         
  474 00000202 F7FF FFFE       BL               Pisca_Transistor_PP5 ; chama a 
                                                            subrotina para pisc
                                                            ar o transistor dos
                                                             leds
  475 00000206 F85D EB04       POP              {LR}
  476 0000020A 4770            BX               LR
  477 0000020C         
  478 0000020C         
  479 0000020C         ; ------------------------------------------------------
                       -------------------------
  480 0000020C         



ARM Macro Assembler    Page 19 


  481 0000020C                 ALIGN                        ; garante que o fim
                                                             da se??o est? alin
                                                            hada 
  482 0000020C                 END                          ; fim do arquivo
              400FE608 
              400FEA08 
              40058528 
              40060528 
              40061528 
              40062528 
              40063528 
              40065528 
              40066528 
              4005852C 
              4006052C 
              4006152C 
              4006252C 
              4006352C 
              4006552C 
              4006652C 
              40058400 
              40060400 
              40061400 
              40062400 
              40063400 
              40065400 
              40066400 
              40058420 
              40060420 
              40061420 
              40062420 
              40063420 
              40065420 
              40066420 
              4005851C 
              4006051C 
              4006151C 
              4006251C 
              4006351C 
              4006551C 
              4006651C 
              40060510 
              40062510 
              40060410 
              40060404 
              40060408 
              4006040C 
              4006041C 
              E000E104 
              E000E430 
              400583FC 
              400603FC 
              400613FC 
              400623FC 
              400633FC 
              400653FC 
              400663FC 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\gpio.d -o.\objects\gpio.o -IC:\Users\pedro\AppData\Local\Arm



ARM Macro Assembler    Page 20 


\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1" -
-predefine="__UVISION_VERSION SETA 541" --predefine="TM4C1294NCPDT SETA 1" --li
st=.\listings\gpio.lst gpio.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 125 in file gpio.s
   Uses
      None
Comment: .text unused
EsperaGPIO 00000022

Symbol: EsperaGPIO
   Definitions
      At line 165 in file gpio.s
   Uses
      At line 174 in file gpio.s
Comment: EsperaGPIO used once
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 149 in file gpio.s
   Uses
      At line 128 in file gpio.s
Comment: GPIO_Init used once
LED_Output 000001EE

Symbol: LED_Output
   Definitions
      At line 460 in file gpio.s
   Uses
      At line 137 in file gpio.s
Comment: LED_Output used once
PortA_Output 0000017C

Symbol: PortA_Output
   Definitions
      At line 365 in file gpio.s
   Uses
      At line 129 in file gpio.s
Comment: PortA_Output used once
PortJ_Input 0000018C

Symbol: PortJ_Input
   Definitions
      At line 377 in file gpio.s
   Uses
      At line 130 in file gpio.s
Comment: PortJ_Input used once
PortK_Output 00000192

Symbol: PortK_Output
   Definitions
      At line 385 in file gpio.s
   Uses
      At line 131 in file gpio.s
Comment: PortK_Output used once
PortL_Input 000001A2

Symbol: PortL_Input



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 397 in file gpio.s
   Uses
      At line 132 in file gpio.s
Comment: PortL_Input used once
PortM_Change_Dir 000001B8

Symbol: PortM_Change_Dir
   Definitions
      At line 418 in file gpio.s
   Uses
      At line 138 in file gpio.s
Comment: PortM_Change_Dir used once
PortM_Input 000001C8

Symbol: PortM_Input
   Definitions
      At line 431 in file gpio.s
   Uses
      At line 133 in file gpio.s
Comment: PortM_Input used once
PortM_Output 000001A8

Symbol: PortM_Output
   Definitions
      At line 405 in file gpio.s
   Uses
      At line 134 in file gpio.s
Comment: PortM_Output used once
PortP_Output 000001CE

Symbol: PortP_Output
   Definitions
      At line 439 in file gpio.s
   Uses
      At line 135 in file gpio.s
Comment: PortP_Output used once
PortQ_Output 000001DE

Symbol: PortQ_Output
   Definitions
      At line 451 in file gpio.s
   Uses
      At line 136 in file gpio.s
Comment: PortQ_Output used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA 00000001

Symbol: GPIO_PORTA
   Definitions
      At line 32 in file gpio.s
   Uses
      At line 155 in file gpio.s
      At line 166 in file gpio.s

GPIO_PORTA_AHB_AFSEL_R 40058420

Symbol: GPIO_PORTA_AHB_AFSEL_R
   Definitions
      At line 27 in file gpio.s
   Uses
      At line 256 in file gpio.s
Comment: GPIO_PORTA_AHB_AFSEL_R used once
GPIO_PORTA_AHB_AMSEL_R 40058528

Symbol: GPIO_PORTA_AHB_AMSEL_R
   Definitions
      At line 24 in file gpio.s
   Uses
      At line 178 in file gpio.s
Comment: GPIO_PORTA_AHB_AMSEL_R used once
GPIO_PORTA_AHB_CR_R 40058524

Symbol: GPIO_PORTA_AHB_CR_R
   Definitions
      At line 23 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_CR_R unused
GPIO_PORTA_AHB_DATA_BITS_R 40058000

Symbol: GPIO_PORTA_AHB_DATA_BITS_R
   Definitions
      At line 31 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_DATA_BITS_R unused
GPIO_PORTA_AHB_DATA_R 400583FC

Symbol: GPIO_PORTA_AHB_DATA_R
   Definitions
      At line 30 in file gpio.s
   Uses
      At line 366 in file gpio.s
      At line 462 in file gpio.s

GPIO_PORTA_AHB_DEN_R 4005851C

Symbol: GPIO_PORTA_AHB_DEN_R
   Definitions
      At line 28 in file gpio.s
   Uses
      At line 279 in file gpio.s
Comment: GPIO_PORTA_AHB_DEN_R used once
GPIO_PORTA_AHB_DIR_R 40058400



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTA_AHB_DIR_R
   Definitions
      At line 26 in file gpio.s
   Uses
      At line 223 in file gpio.s
Comment: GPIO_PORTA_AHB_DIR_R used once
GPIO_PORTA_AHB_LOCK_R 40058520

Symbol: GPIO_PORTA_AHB_LOCK_R
   Definitions
      At line 22 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_LOCK_R unused
GPIO_PORTA_AHB_PCTL_R 4005852C

Symbol: GPIO_PORTA_AHB_PCTL_R
   Definitions
      At line 25 in file gpio.s
   Uses
      At line 201 in file gpio.s
Comment: GPIO_PORTA_AHB_PCTL_R used once
GPIO_PORTA_AHB_PUR_R 40058510

Symbol: GPIO_PORTA_AHB_PUR_R
   Definitions
      At line 29 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_PUR_R unused
GPIO_PORTJ 00000100

Symbol: GPIO_PORTJ
   Definitions
      At line 45 in file gpio.s
   Uses
      At line 156 in file gpio.s
      At line 167 in file gpio.s

GPIO_PORTJ_AHB_AFSEL_R 40060420

Symbol: GPIO_PORTJ_AHB_AFSEL_R
   Definitions
      At line 40 in file gpio.s
   Uses
      At line 259 in file gpio.s
Comment: GPIO_PORTJ_AHB_AFSEL_R used once
GPIO_PORTJ_AHB_AMSEL_R 40060528

Symbol: GPIO_PORTJ_AHB_AMSEL_R
   Definitions
      At line 37 in file gpio.s
   Uses
      At line 181 in file gpio.s
Comment: GPIO_PORTJ_AHB_AMSEL_R used once
GPIO_PORTJ_AHB_CR_R 40060524

Symbol: GPIO_PORTJ_AHB_CR_R



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 36 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_CR_R unused
GPIO_PORTJ_AHB_DATA_BITS_R 40060000

Symbol: GPIO_PORTJ_AHB_DATA_BITS_R
   Definitions
      At line 44 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_DATA_BITS_R unused
GPIO_PORTJ_AHB_DATA_R 400603FC

Symbol: GPIO_PORTJ_AHB_DATA_R
   Definitions
      At line 43 in file gpio.s
   Uses
      At line 378 in file gpio.s
Comment: GPIO_PORTJ_AHB_DATA_R used once
GPIO_PORTJ_AHB_DEN_R 4006051C

Symbol: GPIO_PORTJ_AHB_DEN_R
   Definitions
      At line 41 in file gpio.s
   Uses
      At line 284 in file gpio.s
Comment: GPIO_PORTJ_AHB_DEN_R used once
GPIO_PORTJ_AHB_DIR_R 40060400

Symbol: GPIO_PORTJ_AHB_DIR_R
   Definitions
      At line 39 in file gpio.s
   Uses
      At line 228 in file gpio.s
Comment: GPIO_PORTJ_AHB_DIR_R used once
GPIO_PORTJ_AHB_LOCK_R 40060520

Symbol: GPIO_PORTJ_AHB_LOCK_R
   Definitions
      At line 35 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_LOCK_R unused
GPIO_PORTJ_AHB_PCTL_R 4006052C

Symbol: GPIO_PORTJ_AHB_PCTL_R
   Definitions
      At line 38 in file gpio.s
   Uses
      At line 204 in file gpio.s
Comment: GPIO_PORTJ_AHB_PCTL_R used once
GPIO_PORTJ_AHB_PUR_R 40060510

Symbol: GPIO_PORTJ_AHB_PUR_R
   Definitions
      At line 42 in file gpio.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 315 in file gpio.s
Comment: GPIO_PORTJ_AHB_PUR_R used once
GPIO_PORTJ_IBE_R 40060408

Symbol: GPIO_PORTJ_IBE_R
   Definitions
      At line 114 in file gpio.s
   Uses
      At line 333 in file gpio.s
Comment: GPIO_PORTJ_IBE_R used once
GPIO_PORTJ_ICR_R 4006041C

Symbol: GPIO_PORTJ_ICR_R
   Definitions
      At line 117 in file gpio.s
   Uses
      At line 340 in file gpio.s
Comment: GPIO_PORTJ_ICR_R used once
GPIO_PORTJ_IEV_R 4006040C

Symbol: GPIO_PORTJ_IEV_R
   Definitions
      At line 115 in file gpio.s
   Uses
      At line 337 in file gpio.s
Comment: GPIO_PORTJ_IEV_R used once
GPIO_PORTJ_IM_R 40060410

Symbol: GPIO_PORTJ_IM_R
   Definitions
      At line 116 in file gpio.s
   Uses
      At line 324 in file gpio.s
      At line 344 in file gpio.s

GPIO_PORTJ_IS_R 40060404

Symbol: GPIO_PORTJ_IS_R
   Definitions
      At line 113 in file gpio.s
   Uses
      At line 329 in file gpio.s
Comment: GPIO_PORTJ_IS_R used once
GPIO_PORTJ_RIS_R 40060414

Symbol: GPIO_PORTJ_RIS_R
   Definitions
      At line 118 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_RIS_R unused
GPIO_PORTK 00000200

Symbol: GPIO_PORTK
   Definitions
      At line 58 in file gpio.s
   Uses
      At line 157 in file gpio.s
      At line 168 in file gpio.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols


GPIO_PORTK_AFSEL_R 40061420

Symbol: GPIO_PORTK_AFSEL_R
   Definitions
      At line 53 in file gpio.s
   Uses
      At line 262 in file gpio.s
Comment: GPIO_PORTK_AFSEL_R used once
GPIO_PORTK_AMSEL_R 40061528

Symbol: GPIO_PORTK_AMSEL_R
   Definitions
      At line 50 in file gpio.s
   Uses
      At line 184 in file gpio.s
Comment: GPIO_PORTK_AMSEL_R used once
GPIO_PORTK_CR_R 40061524

Symbol: GPIO_PORTK_CR_R
   Definitions
      At line 49 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_CR_R unused
GPIO_PORTK_DATA_BITS_R 40061000

Symbol: GPIO_PORTK_DATA_BITS_R
   Definitions
      At line 57 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_DATA_BITS_R unused
GPIO_PORTK_DATA_R 400613FC

Symbol: GPIO_PORTK_DATA_R
   Definitions
      At line 56 in file gpio.s
   Uses
      At line 386 in file gpio.s
Comment: GPIO_PORTK_DATA_R used once
GPIO_PORTK_DEN_R 4006151C

Symbol: GPIO_PORTK_DEN_R
   Definitions
      At line 54 in file gpio.s
   Uses
      At line 289 in file gpio.s
Comment: GPIO_PORTK_DEN_R used once
GPIO_PORTK_DIR_R 40061400

Symbol: GPIO_PORTK_DIR_R
   Definitions
      At line 52 in file gpio.s
   Uses
      At line 232 in file gpio.s
Comment: GPIO_PORTK_DIR_R used once
GPIO_PORTK_LOCK_R 40061520




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTK_LOCK_R
   Definitions
      At line 48 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_LOCK_R unused
GPIO_PORTK_PCTL_R 4006152C

Symbol: GPIO_PORTK_PCTL_R
   Definitions
      At line 51 in file gpio.s
   Uses
      At line 207 in file gpio.s
Comment: GPIO_PORTK_PCTL_R used once
GPIO_PORTK_PUR_R 40061510

Symbol: GPIO_PORTK_PUR_R
   Definitions
      At line 55 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_PUR_R unused
GPIO_PORTL 00000400

Symbol: GPIO_PORTL
   Definitions
      At line 70 in file gpio.s
   Uses
      At line 158 in file gpio.s
      At line 169 in file gpio.s

GPIO_PORTL_AFSEL_R 40062420

Symbol: GPIO_PORTL_AFSEL_R
   Definitions
      At line 66 in file gpio.s
   Uses
      At line 265 in file gpio.s
Comment: GPIO_PORTL_AFSEL_R used once
GPIO_PORTL_AMSEL_R 40062528

Symbol: GPIO_PORTL_AMSEL_R
   Definitions
      At line 63 in file gpio.s
   Uses
      At line 187 in file gpio.s
Comment: GPIO_PORTL_AMSEL_R used once
GPIO_PORTL_CR_R 40062524

Symbol: GPIO_PORTL_CR_R
   Definitions
      At line 62 in file gpio.s
   Uses
      None
Comment: GPIO_PORTL_CR_R unused
GPIO_PORTL_DATA_R 400623FC

Symbol: GPIO_PORTL_DATA_R
   Definitions



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      At line 69 in file gpio.s
   Uses
      At line 398 in file gpio.s
Comment: GPIO_PORTL_DATA_R used once
GPIO_PORTL_DEN_R 4006251C

Symbol: GPIO_PORTL_DEN_R
   Definitions
      At line 67 in file gpio.s
   Uses
      At line 294 in file gpio.s
Comment: GPIO_PORTL_DEN_R used once
GPIO_PORTL_DIR_R 40062400

Symbol: GPIO_PORTL_DIR_R
   Definitions
      At line 65 in file gpio.s
   Uses
      At line 236 in file gpio.s
Comment: GPIO_PORTL_DIR_R used once
GPIO_PORTL_LOCK_R 40062520

Symbol: GPIO_PORTL_LOCK_R
   Definitions
      At line 61 in file gpio.s
   Uses
      None
Comment: GPIO_PORTL_LOCK_R unused
GPIO_PORTL_PCTL_R 4006252C

Symbol: GPIO_PORTL_PCTL_R
   Definitions
      At line 64 in file gpio.s
   Uses
      At line 210 in file gpio.s
Comment: GPIO_PORTL_PCTL_R used once
GPIO_PORTL_PUR_R 40062510

Symbol: GPIO_PORTL_PUR_R
   Definitions
      At line 68 in file gpio.s
   Uses
      At line 319 in file gpio.s
Comment: GPIO_PORTL_PUR_R used once
GPIO_PORTM 00000800

Symbol: GPIO_PORTM
   Definitions
      At line 82 in file gpio.s
   Uses
      At line 159 in file gpio.s
      At line 170 in file gpio.s

GPIO_PORTM_AFSEL_R 40063420

Symbol: GPIO_PORTM_AFSEL_R
   Definitions
      At line 78 in file gpio.s
   Uses



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

      At line 268 in file gpio.s
Comment: GPIO_PORTM_AFSEL_R used once
GPIO_PORTM_AMSEL_R 40063528

Symbol: GPIO_PORTM_AMSEL_R
   Definitions
      At line 75 in file gpio.s
   Uses
      At line 190 in file gpio.s
Comment: GPIO_PORTM_AMSEL_R used once
GPIO_PORTM_CR_R 40063524

Symbol: GPIO_PORTM_CR_R
   Definitions
      At line 74 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_CR_R unused
GPIO_PORTM_DATA_R 400633FC

Symbol: GPIO_PORTM_DATA_R
   Definitions
      At line 81 in file gpio.s
   Uses
      At line 406 in file gpio.s
      At line 432 in file gpio.s

GPIO_PORTM_DEN_R 4006351C

Symbol: GPIO_PORTM_DEN_R
   Definitions
      At line 79 in file gpio.s
   Uses
      At line 299 in file gpio.s
Comment: GPIO_PORTM_DEN_R used once
GPIO_PORTM_DIR_R 40063400

Symbol: GPIO_PORTM_DIR_R
   Definitions
      At line 77 in file gpio.s
   Uses
      At line 240 in file gpio.s
      At line 419 in file gpio.s

GPIO_PORTM_LOCK_R 40063520

Symbol: GPIO_PORTM_LOCK_R
   Definitions
      At line 73 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_LOCK_R unused
GPIO_PORTM_PCTL_R 4006352C

Symbol: GPIO_PORTM_PCTL_R
   Definitions
      At line 76 in file gpio.s
   Uses
      At line 213 in file gpio.s



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

Comment: GPIO_PORTM_PCTL_R used once
GPIO_PORTM_PUR_R 40063510

Symbol: GPIO_PORTM_PUR_R
   Definitions
      At line 80 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_PUR_R unused
GPIO_PORTP 00002000

Symbol: GPIO_PORTP
   Definitions
      At line 95 in file gpio.s
   Uses
      At line 160 in file gpio.s
      At line 171 in file gpio.s

GPIO_PORTP_AFSEL_R 40065420

Symbol: GPIO_PORTP_AFSEL_R
   Definitions
      At line 90 in file gpio.s
   Uses
      At line 271 in file gpio.s
Comment: GPIO_PORTP_AFSEL_R used once
GPIO_PORTP_AMSEL_R 40065528

Symbol: GPIO_PORTP_AMSEL_R
   Definitions
      At line 87 in file gpio.s
   Uses
      At line 193 in file gpio.s
Comment: GPIO_PORTP_AMSEL_R used once
GPIO_PORTP_CR_R 40065524

Symbol: GPIO_PORTP_CR_R
   Definitions
      At line 86 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_CR_R unused
GPIO_PORTP_DATA_BITS_R 40065000

Symbol: GPIO_PORTP_DATA_BITS_R
   Definitions
      At line 94 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_DATA_BITS_R unused
GPIO_PORTP_DATA_R 400653FC

Symbol: GPIO_PORTP_DATA_R
   Definitions
      At line 93 in file gpio.s
   Uses
      At line 440 in file gpio.s
Comment: GPIO_PORTP_DATA_R used once
GPIO_PORTP_DEN_R 4006551C



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTP_DEN_R
   Definitions
      At line 91 in file gpio.s
   Uses
      At line 304 in file gpio.s
Comment: GPIO_PORTP_DEN_R used once
GPIO_PORTP_DIR_R 40065400

Symbol: GPIO_PORTP_DIR_R
   Definitions
      At line 89 in file gpio.s
   Uses
      At line 244 in file gpio.s
Comment: GPIO_PORTP_DIR_R used once
GPIO_PORTP_LOCK_R 40065520

Symbol: GPIO_PORTP_LOCK_R
   Definitions
      At line 85 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_LOCK_R unused
GPIO_PORTP_PCTL_R 4006552C

Symbol: GPIO_PORTP_PCTL_R
   Definitions
      At line 88 in file gpio.s
   Uses
      At line 216 in file gpio.s
Comment: GPIO_PORTP_PCTL_R used once
GPIO_PORTP_PUR_R 40065510

Symbol: GPIO_PORTP_PUR_R
   Definitions
      At line 92 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_PUR_R unused
GPIO_PORTQ 00004000

Symbol: GPIO_PORTQ
   Definitions
      At line 108 in file gpio.s
   Uses
      At line 161 in file gpio.s
      At line 172 in file gpio.s

GPIO_PORTQ_AFSEL_R 40066420

Symbol: GPIO_PORTQ_AFSEL_R
   Definitions
      At line 103 in file gpio.s
   Uses
      At line 274 in file gpio.s
Comment: GPIO_PORTQ_AFSEL_R used once
GPIO_PORTQ_AMSEL_R 40066528

Symbol: GPIO_PORTQ_AMSEL_R



ARM Macro Assembler    Page 11 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 100 in file gpio.s
   Uses
      At line 196 in file gpio.s
Comment: GPIO_PORTQ_AMSEL_R used once
GPIO_PORTQ_CR_R 40066524

Symbol: GPIO_PORTQ_CR_R
   Definitions
      At line 99 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_CR_R unused
GPIO_PORTQ_DATA_BITS_R 40066000

Symbol: GPIO_PORTQ_DATA_BITS_R
   Definitions
      At line 107 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_DATA_BITS_R unused
GPIO_PORTQ_DATA_R 400663FC

Symbol: GPIO_PORTQ_DATA_R
   Definitions
      At line 106 in file gpio.s
   Uses
      At line 452 in file gpio.s
      At line 463 in file gpio.s

GPIO_PORTQ_DEN_R 4006651C

Symbol: GPIO_PORTQ_DEN_R
   Definitions
      At line 104 in file gpio.s
   Uses
      At line 309 in file gpio.s
Comment: GPIO_PORTQ_DEN_R used once
GPIO_PORTQ_DIR_R 40066400

Symbol: GPIO_PORTQ_DIR_R
   Definitions
      At line 102 in file gpio.s
   Uses
      At line 248 in file gpio.s
Comment: GPIO_PORTQ_DIR_R used once
GPIO_PORTQ_LOCK_R 40066520

Symbol: GPIO_PORTQ_LOCK_R
   Definitions
      At line 98 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_LOCK_R unused
GPIO_PORTQ_PCTL_R 4006652C

Symbol: GPIO_PORTQ_PCTL_R
   Definitions
      At line 101 in file gpio.s



ARM Macro Assembler    Page 12 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 219 in file gpio.s
Comment: GPIO_PORTQ_PCTL_R used once
GPIO_PORTQ_PUR_R 40066510

Symbol: GPIO_PORTQ_PUR_R
   Definitions
      At line 105 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_PUR_R unused
INVALID_DIGIT 00000100

Symbol: INVALID_DIGIT
   Definitions
      At line 10 in file gpio.s
   Uses
      None
Comment: INVALID_DIGIT unused
INVALID_PW_CHAR FFFFFFFF

Symbol: INVALID_PW_CHAR
   Definitions
      At line 11 in file gpio.s
   Uses
      None
Comment: INVALID_PW_CHAR unused
NVIC_EN1_R E000E104

Symbol: NVIC_EN1_R
   Definitions
      At line 120 in file gpio.s
   Uses
      At line 348 in file gpio.s
Comment: NVIC_EN1_R used once
NVIC_PRI12_R E000E430

Symbol: NVIC_PRI12_R
   Definitions
      At line 119 in file gpio.s
   Uses
      At line 353 in file gpio.s
Comment: NVIC_PRI12_R used once
SYSCTL_PRGPIO_R 400FEA08

Symbol: SYSCTL_PRGPIO_R
   Definitions
      At line 17 in file gpio.s
   Uses
      At line 164 in file gpio.s
Comment: SYSCTL_PRGPIO_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 16 in file gpio.s
   Uses
      At line 154 in file gpio.s
Comment: SYSCTL_RCGCGPIO_R used once



ARM Macro Assembler    Page 13 Alphabetic symbol ordering
Absolute symbols

87 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Pisca_Transistor_PP5 00000000

Symbol: Pisca_Transistor_PP5
   Definitions
      At line 142 in file gpio.s
   Uses
      At line 474 in file gpio.s
Comment: Pisca_Transistor_PP5 used once
1 symbol
437 symbols in table
