


ARM Macro Assembler    Page 1 


    1 00000000         ; gpio.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Template by Prof. Guilherme Peron - 24/08/2020
    4 00000000         
    5 00000000         ; ------------------------------------------------------
                       -------------------------
    6 00000000                 THUMB                        ; Instru??es do tip
                                                            o Thumb-2
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000         ; Declara??es EQU - Defines
    9 00000000         ; ========================
   10 00000000 00000100 
                       INVALID_DIGIT
                               EQU              256         ; Representa um d?g
                                                            ito inv?lido do tec
                                                            lado matricial
   11 00000000 FFFFFFFF 
                       INVALID_PW_CHAR
                               EQU              -1          ; Representa um car
                                                            actere impossível d
                                                            e estar na senha
   12 00000000         
   13 00000000 00000000 
                       INICIO  EQU              0
   14 00000000 00000001 
                       CONFIG_SENHA
                               EQU              1
   15 00000000 00000002 
                       COFRE_FECHANDO
                               EQU              2
   16 00000000 00000003 
                       COFRE_FECHADO
                               EQU              3
   17 00000000 00000004 
                       COFRE_ABRINDO
                               EQU              4
   18 00000000 00000005 
                       COFRE_TRAVADO
                               EQU              5
   19 00000000 00000006 
                       DESTRAVA_COFRE
                               EQU              6
   20 00000000 00000007 
                       CONFIG_SENHA_MESTRA
                               EQU              7
   21 00000000         ; ========================
   22 00000000         ; Defini??es dos Registradores Gerais
   23 00000000         ; All register values were taken from tm4c1294ncpdt.h - 
                       TM4C1294NCPDT Register Definitions
   24 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   25 00000000 400FEA08 
                       SYSCTL_PRGPIO_R
                               EQU              0x400FEA08
   26 00000000         ; ========================
   27 00000000         ; Defini??es dos Ports
   28 00000000         



ARM Macro Assembler    Page 2 


   29 00000000         ; PORT A
   30 00000000 40058520 
                       GPIO_PORTA_AHB_LOCK_R
                               EQU              0x40058520
   31 00000000 40058524 
                       GPIO_PORTA_AHB_CR_R
                               EQU              0x40058524
   32 00000000 40058528 
                       GPIO_PORTA_AHB_AMSEL_R
                               EQU              0x40058528
   33 00000000 4005852C 
                       GPIO_PORTA_AHB_PCTL_R
                               EQU              0x4005852C
   34 00000000 40058400 
                       GPIO_PORTA_AHB_DIR_R
                               EQU              0x40058400
   35 00000000 40058420 
                       GPIO_PORTA_AHB_AFSEL_R
                               EQU              0x40058420
   36 00000000 4005851C 
                       GPIO_PORTA_AHB_DEN_R
                               EQU              0x4005851C
   37 00000000 40058510 
                       GPIO_PORTA_AHB_PUR_R
                               EQU              0x40058510
   38 00000000 400583FC 
                       GPIO_PORTA_AHB_DATA_R
                               EQU              0x400583FC
   39 00000000 40058000 
                       GPIO_PORTA_AHB_DATA_BITS_R
                               EQU              0x40058000
   40 00000000 00000001 
                       GPIO_PORTA
                               EQU              2_000000000000001 
                                                            ; SYSCTL_PPGPIO_P0
   41 00000000         
   42 00000000         ; PORT J
   43 00000000 40060520 
                       GPIO_PORTJ_AHB_LOCK_R
                               EQU              0x40060520
   44 00000000 40060524 
                       GPIO_PORTJ_AHB_CR_R
                               EQU              0x40060524
   45 00000000 40060528 
                       GPIO_PORTJ_AHB_AMSEL_R
                               EQU              0x40060528
   46 00000000 4006052C 
                       GPIO_PORTJ_AHB_PCTL_R
                               EQU              0x4006052C
   47 00000000 40060400 
                       GPIO_PORTJ_AHB_DIR_R
                               EQU              0x40060400
   48 00000000 40060420 
                       GPIO_PORTJ_AHB_AFSEL_R
                               EQU              0x40060420
   49 00000000 4006051C 
                       GPIO_PORTJ_AHB_DEN_R
                               EQU              0x4006051C
   50 00000000 40060510 



ARM Macro Assembler    Page 3 


                       GPIO_PORTJ_AHB_PUR_R
                               EQU              0x40060510
   51 00000000 400603FC 
                       GPIO_PORTJ_AHB_DATA_R
                               EQU              0x400603FC
   52 00000000 40060000 
                       GPIO_PORTJ_AHB_DATA_BITS_R
                               EQU              0x40060000
   53 00000000 00000100 
                       GPIO_PORTJ
                               EQU              2_000000100000000 
                                                            ; SYSCTL_PPGPIO_P8
   54 00000000         
   55 00000000         ; PORT K
   56 00000000 40061520 
                       GPIO_PORTK_LOCK_R
                               EQU              0x40061520
   57 00000000 40061524 
                       GPIO_PORTK_CR_R
                               EQU              0x40061524
   58 00000000 40061528 
                       GPIO_PORTK_AMSEL_R
                               EQU              0x40061528
   59 00000000 4006152C 
                       GPIO_PORTK_PCTL_R
                               EQU              0x4006152C
   60 00000000 40061400 
                       GPIO_PORTK_DIR_R
                               EQU              0x40061400
   61 00000000 40061420 
                       GPIO_PORTK_AFSEL_R
                               EQU              0x40061420
   62 00000000 4006151C 
                       GPIO_PORTK_DEN_R
                               EQU              0x4006151C
   63 00000000 40061510 
                       GPIO_PORTK_PUR_R
                               EQU              0x40061510
   64 00000000 400613FC 
                       GPIO_PORTK_DATA_R
                               EQU              0x400613FC
   65 00000000 40061000 
                       GPIO_PORTK_DATA_BITS_R
                               EQU              0x40061000
   66 00000000 00000200 
                       GPIO_PORTK
                               EQU              2_000001000000000 
                                                            ; SYSCTL_PPGPIO_P9
   67 00000000         
   68 00000000         ; PORT L
   69 00000000 40062520 
                       GPIO_PORTL_LOCK_R
                               EQU              0x40062520
   70 00000000 40062524 
                       GPIO_PORTL_CR_R
                               EQU              0x40062524
   71 00000000 40062528 
                       GPIO_PORTL_AMSEL_R
                               EQU              0x40062528



ARM Macro Assembler    Page 4 


   72 00000000 4006252C 
                       GPIO_PORTL_PCTL_R
                               EQU              0x4006252C
   73 00000000 40062400 
                       GPIO_PORTL_DIR_R
                               EQU              0x40062400
   74 00000000 40062420 
                       GPIO_PORTL_AFSEL_R
                               EQU              0x40062420
   75 00000000 4006251C 
                       GPIO_PORTL_DEN_R
                               EQU              0x4006251C
   76 00000000 40062510 
                       GPIO_PORTL_PUR_R
                               EQU              0x40062510
   77 00000000 400623FC 
                       GPIO_PORTL_DATA_R
                               EQU              0x400623FC
   78 00000000 00000400 
                       GPIO_PORTL
                               EQU              2_000010000000000 
                                                            ; SYSCTL_PPGPIO_P10
                                                            
   79 00000000         
   80 00000000         ; PORT M
   81 00000000 40063520 
                       GPIO_PORTM_LOCK_R
                               EQU              0x40063520
   82 00000000 40063524 
                       GPIO_PORTM_CR_R
                               EQU              0x40063524
   83 00000000 40063528 
                       GPIO_PORTM_AMSEL_R
                               EQU              0x40063528
   84 00000000 4006352C 
                       GPIO_PORTM_PCTL_R
                               EQU              0x4006352C
   85 00000000 40063400 
                       GPIO_PORTM_DIR_R
                               EQU              0x40063400
   86 00000000 40063420 
                       GPIO_PORTM_AFSEL_R
                               EQU              0x40063420
   87 00000000 4006351C 
                       GPIO_PORTM_DEN_R
                               EQU              0x4006351C
   88 00000000 40063510 
                       GPIO_PORTM_PUR_R
                               EQU              0x40063510
   89 00000000 400633FC 
                       GPIO_PORTM_DATA_R
                               EQU              0x400633FC
   90 00000000 00000800 
                       GPIO_PORTM
                               EQU              2_000100000000000 
                                                            ; SYSCTL_PPGPIO_P11
                                                            
   91 00000000         
   92 00000000         ; PORT P



ARM Macro Assembler    Page 5 


   93 00000000 40065520 
                       GPIO_PORTP_LOCK_R
                               EQU              0x40065520
   94 00000000 40065524 
                       GPIO_PORTP_CR_R
                               EQU              0x40065524
   95 00000000 40065528 
                       GPIO_PORTP_AMSEL_R
                               EQU              0x40065528
   96 00000000 4006552C 
                       GPIO_PORTP_PCTL_R
                               EQU              0x4006552C
   97 00000000 40065400 
                       GPIO_PORTP_DIR_R
                               EQU              0x40065400
   98 00000000 40065420 
                       GPIO_PORTP_AFSEL_R
                               EQU              0x40065420
   99 00000000 4006551C 
                       GPIO_PORTP_DEN_R
                               EQU              0x4006551C
  100 00000000 40065510 
                       GPIO_PORTP_PUR_R
                               EQU              0x40065510
  101 00000000 400653FC 
                       GPIO_PORTP_DATA_R
                               EQU              0x400653FC
  102 00000000 40065000 
                       GPIO_PORTP_DATA_BITS_R
                               EQU              0x40065000
  103 00000000 00002000 
                       GPIO_PORTP
                               EQU              2_010000000000000 
                                                            ; SYSCTL_PPGPIO_P13
                                                            
  104 00000000         
  105 00000000         ; PORT Q
  106 00000000 40066520 
                       GPIO_PORTQ_LOCK_R
                               EQU              0x40066520
  107 00000000 40066524 
                       GPIO_PORTQ_CR_R
                               EQU              0x40066524
  108 00000000 40066528 
                       GPIO_PORTQ_AMSEL_R
                               EQU              0x40066528
  109 00000000 4006652C 
                       GPIO_PORTQ_PCTL_R
                               EQU              0x4006652C
  110 00000000 40066400 
                       GPIO_PORTQ_DIR_R
                               EQU              0x40066400
  111 00000000 40066420 
                       GPIO_PORTQ_AFSEL_R
                               EQU              0x40066420
  112 00000000 4006651C 
                       GPIO_PORTQ_DEN_R
                               EQU              0x4006651C
  113 00000000 40066510 



ARM Macro Assembler    Page 6 


                       GPIO_PORTQ_PUR_R
                               EQU              0x40066510
  114 00000000 400663FC 
                       GPIO_PORTQ_DATA_R
                               EQU              0x400663FC
  115 00000000 40066000 
                       GPIO_PORTQ_DATA_BITS_R
                               EQU              0x40066000
  116 00000000 00004000 
                       GPIO_PORTQ
                               EQU              2_100000000000000 
                                                            ; SYSCTL_PPGPIO_P14
                                                            
  117 00000000         
  118 00000000         ; Interrup??es
  119 00000000         
  120 00000000         ; PORT J Interrup??o
  121 00000000 40060404 
                       GPIO_PORTJ_IS_R
                               EQU              0x40060404
  122 00000000 40060408 
                       GPIO_PORTJ_IBE_R
                               EQU              0x40060408
  123 00000000 4006040C 
                       GPIO_PORTJ_IEV_R
                               EQU              0x4006040C
  124 00000000 40060410 
                       GPIO_PORTJ_IM_R
                               EQU              0x40060410
  125 00000000 4006041C 
                       GPIO_PORTJ_ICR_R
                               EQU              0x4006041C
  126 00000000 40060414 
                       GPIO_PORTJ_RIS_R
                               EQU              0x40060414
  127 00000000 E000E430 
                       NVIC_PRI12_R
                               EQU              0xE000E430
  128 00000000 E000E104 
                       NVIC_EN1_R
                               EQU              0xE000E104
  129 00000000         
  130 00000000         ; ------------------------------------------------------
                       -------------------------
  131 00000000         ; ?rea de C?digo - Tudo abaixo da diretiva a seguir ser?
                        armazenado na mem?ria de 
  132 00000000         ;                  c?digo
  133 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
  134 00000000         
  135 00000000         ; Se alguma fun??o do arquivo for chamada em outro arqui
                       vo 
  136 00000000                 EXPORT           GPIO_Init   ; Permite chamar GP
                                                            IO_Init de outro ar
                                                            quivo
  137 00000000                 EXPORT           PortA_Output ; Permite chamar P
                                                            ortA_Output de outr
                                                            o arquivo
  138 00000000                 EXPORT           PortJ_Input ; Permite chamar Po



ARM Macro Assembler    Page 7 


                                                            rtJ_Input de outro 
                                                            arquivo
  139 00000000                 EXPORT           PortK_Output ; Permite chamar P
                                                            ortK_Output de outr
                                                            o arquivo
  140 00000000                 EXPORT           PortL_Input ; Permite chamar Po
                                                            rtL_Input de outro 
                                                            arquivo
  141 00000000                 EXPORT           PortM_Output ; Permite chamar P
                                                            ortM_Output de outr
                                                            o arquivo
  142 00000000                 EXPORT           PortP_Output ; Permite chamar P
                                                            ortP_Output de outr
                                                            o arquivo
  143 00000000                 EXPORT           PortQ_Output ; Permite chamar P
                                                            ortQ_Output de outr
                                                            o arquivo
  144 00000000                 EXPORT           GPIOPortJ_Handler ; Permite cha
                                                            mar GPIOPortJ_Handl
                                                            er de outro arquivo
                                                            
  145 00000000                 EXPORT           LED_Output
  146 00000000         
  147 00000000         ; Se chamar alguma fun??o externa
  148 00000000                 IMPORT           ModificaSenhaMestra
  149 00000000                 IMPORT           DestravaCofre
  150 00000000                 IMPORT           Pisca_Transistor_PP5
  151 00000000         
  152 00000000         
  153 00000000         ;-------------------------------------------------------
                       -------------------------
  154 00000000         ; Fun??o GPIO_Init
  155 00000000         ; Par?metro de entrada: N?o tem
  156 00000000         ; Par?metro de sa?da: N?o tem
  157 00000000         GPIO_Init
  158 00000000         ;=====================
  159 00000000         ; 1. Ativar o clock para a porta setando o bit correspon
                       dente no registrador RCGCGPIO,
  160 00000000         ; ap?s isso verificar no PRGPIO se a porta est? pronta p
                       ara uso.
  161 00000000         ; enable clock to GPIOF at clock gating register
  162 00000000 4885            LDR              R0, =SYSCTL_RCGCGPIO_R ; Carreg
                                                            a o endere?o do reg
                                                            istrador RCGCGPIO
  163 00000002 F04F 0101       MOV              R1, #GPIO_PORTA ; Seta o bit da
                                                             porta A
  164 00000006 F441 7180       ORR              R1, #GPIO_PORTJ ; Seta o bit da
                                                             porta J, fazendo c
                                                            om OR
  165 0000000A F441 7100       ORR              R1, #GPIO_PORTK ; Seta o bit da
                                                             porta K, fazendo c
                                                            om OR
  166 0000000E F441 6180       ORR              R1, #GPIO_PORTL ; Seta o bit da
                                                             porta L, fazendo c
                                                            om OR
  167 00000012 F441 6100       ORR              R1, #GPIO_PORTM ; Seta o bit da
                                                             porta M, fazendo c
                                                            om OR
  168 00000016 F441 5100       ORR              R1, #GPIO_PORTP ; Seta o bit da



ARM Macro Assembler    Page 8 


                                                             porta P, fazendo c
                                                            om OR
  169 0000001A F441 4180       ORR              R1, #GPIO_PORTQ ; Seta o bit da
                                                             porta Q, fazendo c
                                                            om OR
  170 0000001E 6001            STR              R1, [R0]    ; Move para a mem?r
                                                            ia os bits das port
                                                            as no endere?o do R
                                                            CGCGPIO
  171 00000020         
  172 00000020 487E            LDR              R0, =SYSCTL_PRGPIO_R ; Carrega 
                                                            o endere?o do PRGPI
                                                            O para esperar os G
                                                            PIO ficarem prontos
                                                            
  173 00000022 6801    EsperaGPIO
                               LDR              R1, [R0]    ; L? da mem?ria o c
                                                            onte?do do endere?o
                                                             do registrador
  174 00000024 F04F 0201       MOV              R2, #GPIO_PORTA ; Seta os bits 
                                                            correspondentes ?s 
                                                            portas para fazer a
                                                             compara??o - Seta 
                                                            o bit da porta A
  175 00000028 F442 7280       ORR              R2, #GPIO_PORTJ ; Seta o bit da
                                                             porta J, fazendo c
                                                            om OR
  176 0000002C F442 7200       ORR              R2, #GPIO_PORTK ; Seta o bit da
                                                             porta K, fazendo c
                                                            om OR
  177 00000030 F442 6280       ORR              R2, #GPIO_PORTL ; Seta o bit da
                                                             porta L, fazendo c
                                                            om OR
  178 00000034 F442 6200       ORR              R2, #GPIO_PORTM ; Seta o bit da
                                                             porta M, fazendo c
                                                            om OR
  179 00000038 F442 5200       ORR              R2, #GPIO_PORTP ; Seta o bit da
                                                             porta P, fazendo c
                                                            om OR
  180 0000003C F442 4280       ORR              R2, #GPIO_PORTQ ; Seta o bit da
                                                             porta Q, fazendo c
                                                            om OR
  181 00000040 4211            TST              R1, R2      ; Testa o R1 com R2
                                                             fazendo R1 & R2
  182 00000042 D0EE            BEQ              EsperaGPIO  ; Se o flag Z=1, vo
                                                            lta para o la?o. Se
                                                            n?o continua execut
                                                            ando
  183 00000044         
  184 00000044         ; 2. Limpar o AMSEL para desabilitar a analogica
  185 00000044 F04F 0100       MOV              R1, #0x00   ; Colocar 0 no regi
                                                            strador para desabi
                                                            litar a fun??o anal
                                                            ?gica
  186 00000048 4875            LDR              R0, =GPIO_PORTA_AHB_AMSEL_R ; C
                                                            arrega o R0 com o e
                                                            ndere?o do AMSEL pa
                                                            ra a porta A
  187 0000004A 6001            STR              R1, [R0]    ; Guarda no registr



ARM Macro Assembler    Page 9 


                                                            ador AMSEL da porta
                                                             A da mem?ria
  188 0000004C         
  189 0000004C 4875            LDR              R0, =GPIO_PORTJ_AHB_AMSEL_R ; C
                                                            arrega o R0 com o e
                                                            ndere?o do AMSEL pa
                                                            ra a porta J
  190 0000004E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             J da mem?ria
  191 00000050         
  192 00000050 4875            LDR              R0, =GPIO_PORTK_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            e?o do AMSEL para a
                                                             porta K
  193 00000052 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             K da mem?ria
  194 00000054         
  195 00000054 4875            LDR              R0, =GPIO_PORTL_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            e?o do AMSEL para a
                                                             porta L
  196 00000056 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             L da mem?ria
  197 00000058         
  198 00000058 4875            LDR              R0, =GPIO_PORTM_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            e?o do AMSEL para a
                                                             porta M
  199 0000005A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             M da mem?ria
  200 0000005C         
  201 0000005C 4875            LDR              R0, =GPIO_PORTP_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            e?o do AMSEL para a
                                                             porta P
  202 0000005E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             P da mem?ria
  203 00000060         
  204 00000060 4875            LDR              R0, =GPIO_PORTQ_AMSEL_R ; Carre
                                                            ga o R0 com o ender
                                                            e?o do AMSEL para a
                                                             porta Q
  205 00000062 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador AMSEL da porta
                                                             Q da mem?ria
  206 00000064         
  207 00000064         ; 3. Limpar PCTL para selecionar o GPIO
  208 00000064 F04F 0100       MOV              R1, #0x00   ; Colocar 0 no regi
                                                            strador para seleci
                                                            onar o modo GPIO
  209 00000068 4874            LDR              R0, =GPIO_PORTA_AHB_PCTL_R ; Ca
                                                            rrega o R0 com o en
                                                            dere?o do PCTL para
                                                             a porta A



ARM Macro Assembler    Page 10 


  210 0000006A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            A da mem?ria
  211 0000006C         
  212 0000006C 4874            LDR              R0, =GPIO_PORTJ_AHB_PCTL_R ; Ca
                                                            rrega o R0 com o en
                                                            dere?o do PCTL para
                                                             a porta J
  213 0000006E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            J da mem?ria
  214 00000070         
  215 00000070 4874            LDR              R0, =GPIO_PORTK_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ?o do PCTL para a p
                                                            orta K
  216 00000072 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            K da mem?ria
  217 00000074         
  218 00000074 4874            LDR              R0, =GPIO_PORTL_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ?o do PCTL para a p
                                                            orta L
  219 00000076 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            L da mem?ria
  220 00000078         
  221 00000078 4874            LDR              R0, =GPIO_PORTM_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ?o do PCTL para a p
                                                            orta M
  222 0000007A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            M da mem?ria
  223 0000007C         
  224 0000007C 4874            LDR              R0, =GPIO_PORTP_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ?o do PCTL para a p
                                                            orta P
  225 0000007E 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            P da mem?ria
  226 00000080         
  227 00000080 4874            LDR              R0, =GPIO_PORTQ_PCTL_R ; Carreg
                                                            a o R0 com o endere
                                                            ?o do PCTL para a p
                                                            orta Q
  228 00000082 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            Q da mem?ria
  229 00000084         
  230 00000084         ; 4. DIR para 0 se for entrada, 1 se for sa?da
  231 00000084 4874            LDR              R0, =GPIO_PORTA_AHB_DIR_R ; Car
                                                            rega o R0 com o end
                                                            ere?o do DIR para a
                                                             porta A
  232 00000086 F04F 01F0       MOV              R1, #2_11110000 ; PA7:PA4
  233 0000008A 6001            STR              R1, [R0]    ; Guarda no registr



ARM Macro Assembler    Page 11 


                                                            ador
  234 0000008C         
  235 0000008C         ; O certo era verificar os outros bits da PJ para n?o tr
                       ansformar entradas em sa?das desnecess?rias
  236 0000008C 4873            LDR              R0, =GPIO_PORTJ_AHB_DIR_R ; Car
                                                            rega o R0 com o end
                                                            ere?o do DIR para a
                                                             porta J
  237 0000008E F04F 0100       MOV              R1, #2_00000000 ; PJ0
  238 00000092 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador PCTL da porta 
                                                            J da mem?ria
  239 00000094         
  240 00000094 4872            LDR              R0, =GPIO_PORTK_DIR_R ; Carrega
                                                             o R0 com o endere?
                                                            o do DIR para a por
                                                            ta K
  241 00000096 F04F 01FF       MOV              R1, #2_11111111 ; PK7:PK0
  242 0000009A 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  243 0000009C         
  244 0000009C 4871            LDR              R0, =GPIO_PORTL_DIR_R ; Carrega
                                                             o R0 com o endere?
                                                            o do DIR para a por
                                                            ta L
  245 0000009E F04F 0100       MOV              R1, #2_00000000 ; PL3:PL0
  246 000000A2 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  247 000000A4         
  248 000000A4 4870            LDR              R0, =GPIO_PORTM_DIR_R ; Carrega
                                                             o R0 com o endere?
                                                            o do DIR para a por
                                                            ta M
  249 000000A6 F04F 01F7       MOV              R1, #2_11110111 
                                                            ; PM7:PM4 e PM2:PM0
                                                            
  250 000000AA 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  251 000000AC         
  252 000000AC 486F            LDR              R0, =GPIO_PORTP_DIR_R ; Carrega
                                                             o R0 com o endere?
                                                            o do DIR para a por
                                                            ta P
  253 000000AE F04F 0120       MOV              R1, #2_00100000 ; PP5
  254 000000B2 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  255 000000B4         
  256 000000B4 486E            LDR              R0, =GPIO_PORTQ_DIR_R ; Carrega
                                                             o R0 com o endere?
                                                            o do DIR para a por
                                                            ta Q
  257 000000B6 F04F 010F       MOV              R1, #2_00001111 ; PQ3:PQ0
  258 000000BA 6001            STR              R1, [R0]    ; Guarda no registr
                                                            ador
  259 000000BC         
  260 000000BC         ; 5. Limpar os bits AFSEL para 0 para selecionar GPIO 
  261 000000BC         ;    Sem fun??o alternativa
  262 000000BC F04F 0100       MOV              R1, #0x00   ; Colocar o valor 0
                                                             para n?o setar fun



ARM Macro Assembler    Page 12 


                                                            ??o alternativa
  263 000000C0         
  264 000000C0 486C            LDR              R0, =GPIO_PORTA_AHB_AFSEL_R ; C
                                                            arrega o endere?o d
                                                            o AFSEL da porta A
  265 000000C2 6001            STR              R1, [R0]    ; Escreve na porta
  266 000000C4         
  267 000000C4 486C            LDR              R0, =GPIO_PORTJ_AHB_AFSEL_R ; C
                                                            arrega o endere?o d
                                                            o AFSEL da porta J
  268 000000C6 6001            STR              R1, [R0]    ; Escreve na porta
  269 000000C8         
  270 000000C8 486C            LDR              R0, =GPIO_PORTK_AFSEL_R ; Carre
                                                            ga o endere?o do AF
                                                            SEL da porta K
  271 000000CA 6001            STR              R1, [R0]    ; Escreve na porta
  272 000000CC         
  273 000000CC 486C            LDR              R0, =GPIO_PORTL_AFSEL_R ; Carre
                                                            ga o endere?o do AF
                                                            SEL da porta L
  274 000000CE 6001            STR              R1, [R0]    ; Escreve na porta
  275 000000D0         
  276 000000D0 486C            LDR              R0, =GPIO_PORTM_AFSEL_R ; Carre
                                                            ga o endere?o do AF
                                                            SEL da porta M
  277 000000D2 6001            STR              R1, [R0]    ; Escreve na porta
  278 000000D4         
  279 000000D4 486C            LDR              R0, =GPIO_PORTP_AFSEL_R ; Carre
                                                            ga o endere?o do AF
                                                            SEL da porta P
  280 000000D6 6001            STR              R1, [R0]    ; Escreve na porta
  281 000000D8         
  282 000000D8 486C            LDR              R0, =GPIO_PORTQ_AFSEL_R ; Carre
                                                            ga o endere?o do AF
                                                            SEL da porta Q
  283 000000DA 6001            STR              R1, [R0]    ; Escreve na porta
  284 000000DC         
  285 000000DC         ; 6. Setar os bits de DEN para habilitar I/O digital
  286 000000DC         ; Escrita amig?vel - Read-modify-write
  287 000000DC 486C            LDR              R0, =GPIO_PORTA_AHB_DEN_R ; Car
                                                            rega o endere?o do 
                                                            DEN
  288 000000DE 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  289 000000E0 F041 01F0       ORR              R1, R1, #2_11110000 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PA7:PA4
  290 000000E4 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  291 000000E6         
  292 000000E6 486B            LDR              R0, =GPIO_PORTJ_AHB_DEN_R ; Car
                                                            rega o endere?o do 
                                                            DEN
  293 000000E8 6801            LDR              R1, [R0]    ; L? para carregar 



ARM Macro Assembler    Page 13 


                                                            o valor anterior da
                                                             porta inteira
  294 000000EA F041 0103       ORR              R1, R1, #2_00000011 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PJ0
  295 000000EE 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  296 000000F0         
  297 000000F0 4869            LDR              R0, =GPIO_PORTK_DEN_R ; Carrega
                                                             o endere?o do DEN
  298 000000F2 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  299 000000F4 F041 01FF       ORR              R1, R1, #2_11111111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PK7:PK0
  300 000000F8 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  301 000000FA         
  302 000000FA 4868            LDR              R0, =GPIO_PORTL_DEN_R ; Carrega
                                                             o endere?o do DEN
  303 000000FC 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  304 000000FE F041 010F       ORR              R1, R1, #2_00001111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PL3:PL0
  305 00000102 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  306 00000104         
  307 00000104 4866            LDR              R0, =GPIO_PORTM_DEN_R ; Carrega
                                                             o endere?o do DEN
  308 00000106 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  309 00000108 F041 01F7       ORR              R1, R1, #2_11110111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PM7:PM4 e PM2:PM
                                                            0
  310 0000010C 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  311 0000010E         
  312 0000010E 4865            LDR              R0, =GPIO_PORTP_DEN_R ; Carrega



ARM Macro Assembler    Page 14 


                                                             o endere?o do DEN
  313 00000110 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  314 00000112 F041 0120       ORR              R1, R1, #2_00100000 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PP5
  315 00000116 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  316 00000118         
  317 00000118 4863            LDR              R0, =GPIO_PORTQ_DEN_R ; Carrega
                                                             o endere?o do DEN
  318 0000011A 6801            LDR              R1, [R0]    ; L? para carregar 
                                                            o valor anterior da
                                                             porta inteira
  319 0000011C F041 010F       ORR              R1, R1, #2_00001111 ; Faz o OR 
                                                            bit a bit para mant
                                                            er os valores anter
                                                            iores e setar somen
                                                            te PQ3:PQ0
  320 00000120 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria fu
                                                            ncionalidade digita
                                                            l
  321 00000122         
  322 00000122         ; 7. Para habilitar resistor de pull-up interno, setar P
                       UR para 1
  323 00000122 4862            LDR              R0, =GPIO_PORTJ_AHB_PUR_R ; Car
                                                            rega o endere?o do 
                                                            PUR para a porta J
  324 00000124 F04F 0103       MOV              R1, #2_0011 ; Habilitar funcion
                                                            alidade digital de 
                                                            resistor de pull-up
                                                             PJ0
  325 00000128 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria do
                                                             resistor de pull-u
                                                            p
  326 0000012A         
  327 0000012A 4861            LDR              R0, =GPIO_PORTL_PUR_R ; Carrega
                                                             o endere?o do PUR 
                                                            para a porta L
  328 0000012C F04F 010F       MOV              R1, #2_1111 ; Habilitar funcion
                                                            alidade digital de 
                                                            resistor de pull-up
                                                             PL3:PL0
  329 00000130 6001            STR              R1, [R0]    ; Escreve no regist
                                                            rador da mem?ria do
                                                             resistor de pull-u
                                                            p
  330 00000132         
  331 00000132         ; 8. Interrup??es
  332 00000132 4960            LDR              R1, =GPIO_PORTJ_IM_R
  333 00000134 F04F 0000       MOV              R0, #2_00000000 ; Desabilita a 
                                                            interrup??o na port



ARM Macro Assembler    Page 15 


                                                            a J0
  334 00000138 6008            STR              R0, [R1]
  335 0000013A         
  336 0000013A F04F 0100       MOV              R1, #2_00000000
  337 0000013E 485E            LDR              R0, =GPIO_PORTJ_IS_R ; 0 para i
                                                            nterrup??o de borda
                                                             e 1 para n?vel
  338 00000140 6001            STR              R1, [R0]
  339 00000142         
  340 00000142 F04F 0100       MOV              R1, #2_00000000
  341 00000146 485D            LDR              R0, =GPIO_PORTJ_IBE_R ; 0 para 
                                                            borda ?nica
  342 00000148 6001            STR              R1, [R0]
  343 0000014A         
  344 0000014A F04F 0102       MOV              R1, #2_00000010
  345 0000014E 485C            LDR              R0, =GPIO_PORTJ_IEV_R ; 1 para 
                                                            borda de subida
  346 00000150 6001            STR              R1, [R0]
  347 00000152         
  348 00000152 495C            LDR              R1, =GPIO_PORTJ_ICR_R ; Configu
                                                            ra a interrup??o na
                                                             porta PJ0
  349 00000154 F04F 0003       MOV              R0, #2_00000011
  350 00000158 6008            STR              R0, [R1]
  351 0000015A         
  352 0000015A 4956            LDR              R1, =GPIO_PORTJ_IM_R ; Habilita
                                                             a interrup??o na p
                                                            orta J0
  353 0000015C F04F 0003       MOV              R0, #2_00000011
  354 00000160 6008            STR              R0, [R1]
  355 00000162         
  356 00000162 4959            LDR              R1, =NVIC_EN1_R ; Habilita a in
                                                            terrup??o no PortJ
  357 00000164 F04F 0001       MOV              R0, #1
  358 00000168 EA4F 40C0       LSL              R0, R0, #19
  359 0000016C 6008            STR              R0, [R1]
  360 0000016E         
  361 0000016E 4957            LDR              R1, =NVIC_PRI12_R ; Configura p
                                                            rioridade 5 nos bit
                                                            s 29 a 31
  362 00000170 F04F 0005       MOV              R0, #5
  363 00000174 EA4F 7040       LSL              R0, R0, #29
  364 00000178 6008            STR              R0, [R1]
  365 0000017A         
  366 0000017A         
  367 0000017A 4770            BX               LR
  368 0000017C         
  369 0000017C         ; ------------------------------------------------------
                       -------------------------
  370 0000017C         ; Fun??o PortA_Output
  371 0000017C         ; Par?metro de entrada: R0
  372 0000017C         ; Par?metro de sa?da: N?o tem
  373 0000017C         PortA_Output
  374 0000017C 4954            LDR              R1, =GPIO_PORTA_AHB_DATA_R ; Ca
                                                            rrega o valor do of
                                                            fset do data regist
                                                            er
  375 0000017E         ; Read-Modify-Write para escrita
  376 0000017E 680A            LDR              R2, [R1]



ARM Macro Assembler    Page 16 


  377 00000180 F022 02F0       BIC              R2, #2_11110000 ; M?scara com b
                                                            its 1 nas posi??es 
                                                            que queremos limpar
                                                             PA7:PA4
  378 00000184 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            par?metro de entrad
                                                            a
  379 00000188 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            A
  380 0000018A 4770            BX               LR          ; Retorna
  381 0000018C         
  382 0000018C         ; Fun??o PortJ_Input
  383 0000018C         ; Par?metro de entrada: N?o tem
  384 0000018C         ; Par?metro de sa?da: R0 --> o valor da leitura
  385 0000018C         PortJ_Input
  386 0000018C 4951            LDR              R1, =GPIO_PORTJ_AHB_DATA_R ; Ca
                                                            rrega o valor do of
                                                            fset do data regist
                                                            er
  387 0000018E 6808            LDR              R0, [R1]    ; L? no barramento 
                                                            de dados dos pinos
  388 00000190 4770            BX               LR          ; Retorna
  389 00000192         
  390 00000192         ; Fun??o GPIOPortJ_Handler
  391 00000192         ; Par?metro de entrada: N?o tem
  392 00000192         ; Par?metro de sa?da: R0 --> o valor a ser atualizado
  393 00000192         GPIOPortJ_Handler
  394 00000192 4951            LDR              R1, =GPIO_PORTJ_RIS_R
  395 00000194 6808            LDR              R0, [R1]
  396 00000196         
  397 00000196 2801            CMP              R0, #1
  398 00000198 BF08            IT               EQ
  399 0000019A 2506            MOVEQ            R5, #DESTRAVA_COFRE
  400 0000019C         
  401 0000019C 2802            CMP              R0, #2
  402 0000019E B500            PUSH             {LR}
  403 000001A0 BF08 F7FF 
              FFFE             BLEQ             ModificaSenhaMestra
  404 000001A6 F85D EB04       POP              {LR}
  405 000001AA         
  406 000001AA 4946            LDR              R1, =GPIO_PORTJ_ICR_R ; Configu
                                                            ra a interrup??o na
                                                             porta PJ0
  407 000001AC F04F 0003       MOV              R0, #2_00000011
  408 000001B0 6008            STR              R0, [R1]
  409 000001B2         
  410 000001B2 4770            BX               LR          ; Retorna
  411 000001B4         
  412 000001B4         ; Fun??o PortK_Output
  413 000001B4         ; Par?metro de entrada: R0
  414 000001B4         ; Par?metro de sa?da:  N?o tem
  415 000001B4         PortK_Output
  416 000001B4 4949            LDR              R1, =GPIO_PORTK_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  417 000001B6         ; Read-Modify-Write para escrita
  418 000001B6 680A            LDR              R2, [R1]
  419 000001B8 F022 02FF       BIC              R2, #2_11111111 ; M?scara com b



ARM Macro Assembler    Page 17 


                                                            its 1 nas posi??es 
                                                            que queremos limpar
                                                             PK7:PK0
  420 000001BC EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            par?metro de entrad
                                                            a
  421 000001C0 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            K
  422 000001C2 4770            BX               LR          ; Retorna
  423 000001C4         
  424 000001C4         ; Fun??o PortL_Input
  425 000001C4         ; Par?metro de entrada: N?o tem
  426 000001C4         ; Par?metro de sa?da: R0 --> o valor da leitura
  427 000001C4         PortL_Input
  428 000001C4 4946            LDR              R1, =GPIO_PORTL_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  429 000001C6 6808            LDR              R0, [R1]    ; L? no barramento 
                                                            de dados dos pinos
  430 000001C8 4770            BX               LR          ; Retorna
  431 000001CA         
  432 000001CA         ; Fun??o PortM_Output
  433 000001CA         ; Par?metro de entrada: R0
  434 000001CA         ; Par?metro de sa?da:  N?o tem
  435 000001CA         PortM_Output
  436 000001CA 4946            LDR              R1, =GPIO_PORTM_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  437 000001CC         ; Read-Modify-Write para escrita
  438 000001CC 680A            LDR              R2, [R1]
  439 000001CE F022 02F7       BIC              R2, #2_11110111 ; M?scara com b
                                                            its 1 nas posi??es 
                                                            que queremos limpar
                                                             PM7:PM4 e PM3:PM0
  440 000001D2 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            par?metro de entrad
                                                            a
  441 000001D6 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            M
  442 000001D8 4770            BX               LR          ; Retorna
  443 000001DA         
  444 000001DA         ; Fun??o PortP_Output
  445 000001DA         ; Par?metro de entrada: R0
  446 000001DA         ; Par?metro de sa?da:  N?o tem
  447 000001DA         PortP_Output
  448 000001DA 4943            LDR              R1, =GPIO_PORTP_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  449 000001DC         ; Read-Modify-Write para escrita
  450 000001DC 680A            LDR              R2, [R1]
  451 000001DE F022 0220       BIC              R2, #2_00100000 ; M?scara com b
                                                            its 1 nas posi??es 
                                                            que queremos limpar
                                                             PP5
  452 000001E2 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            par?metro de entrad



ARM Macro Assembler    Page 18 


                                                            a
  453 000001E6 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            P
  454 000001E8 4770            BX               LR          ; Retorna
  455 000001EA         
  456 000001EA         ; Fun??o PortQ_Output
  457 000001EA         ; Par?metro de entrada: R0
  458 000001EA         ; Par?metro de sa?da: N?o tem
  459 000001EA         PortQ_Output
  460 000001EA 4940            LDR              R1, =GPIO_PORTQ_DATA_R ; Carreg
                                                            a o valor do offset
                                                             do data register
  461 000001EC         ; Read-Modify-Write para escrita
  462 000001EC 680A            LDR              R2, [R1]
  463 000001EE F022 020F       BIC              R2, #2_00001111 ; M?scara com b
                                                            its 1 nas posi??es 
                                                            que queremos limpar
                                                             PQ3:PQ0
  464 000001F2 EA40 0002       ORR              R0, R0, R2  ; Fazer o OR do lid
                                                            o pela porta com o 
                                                            par?metro de entrad
                                                            a
  465 000001F6 6008            STR              R0, [R1]    ; Escreve na porta 
                                                            Q
  466 000001F8 4770            BX               LR          ; Retorna
  467 000001FA         
  468 000001FA         LED_Output
  469 000001FA B500            PUSH             {LR}
  470 000001FC 4934            LDR              R1, =GPIO_PORTA_AHB_DATA_R ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r
  471 000001FE 4A3B            LDR              R2, =GPIO_PORTQ_DATA_R ;Carrega
                                                             o valor do offset 
                                                            do data register
  472 00000200         
  473 00000200 680B            LDR              R3, [R1]
  474 00000202 6810            LDR              R0, [R2]
  475 00000204         
  476 00000204 BF04 23F0       MOVEQ            R3, #2_11110000 ;carrega em R3 
                                                            e R4 os bits dos le
                                                            ds que devem piscar
                                                            
  477 00000208 200F            MOVEQ            R0, #2_00001111
  478 0000020A         
  479 0000020A 600B            STR              R3, [R1]    ; carrega no DATA d
                                                            o portA o bit do le
                                                            d da esquerda que d
                                                            eve piscar
  480 0000020C 6010            STR              R0, [R2]    ; carrega no DATA d
                                                            o portQ o bit do le
                                                            d da direita que de
                                                            ve piscar
  481 0000020E         
  482 0000020E F7FF FFFE       BL               Pisca_Transistor_PP5 ; chama a 
                                                            subrotina para pisc
                                                            ar o transistor dos
                                                             leds
  483 00000212 F85D EB04       POP              {LR}



ARM Macro Assembler    Page 19 


  484 00000216 4770            BX               LR
  485 00000218         
  486 00000218         
  487 00000218         ; ------------------------------------------------------
                       -------------------------
  488 00000218         
  489 00000218                 ALIGN                        ; garante que o fim
                                                             da se??o est? alin
                                                            hada 
  490 00000218                 END                          ; fim do arquivo
              400FE608 
              400FEA08 
              40058528 
              40060528 
              40061528 
              40062528 
              40063528 
              40065528 
              40066528 
              4005852C 
              4006052C 
              4006152C 
              4006252C 
              4006352C 
              4006552C 
              4006652C 
              40058400 
              40060400 
              40061400 
              40062400 
              40063400 
              40065400 
              40066400 
              40058420 
              40060420 
              40061420 
              40062420 
              40063420 
              40065420 
              40066420 
              4005851C 
              4006051C 
              4006151C 
              4006251C 
              4006351C 
              4006551C 
              4006651C 
              40060510 
              40062510 
              40060410 
              40060404 
              40060408 
              4006040C 
              4006041C 
              E000E104 
              E000E430 
              400583FC 
              400603FC 
              40060414 



ARM Macro Assembler    Page 20 


              400613FC 
              400623FC 
              400633FC 
              400653FC 
              400663FC 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\gpio.d -o.\objects\gpio.o -IC:\Users\pedro\AppData\Local\Arm
\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1" -
-predefine="__UVISION_VERSION SETA 541" --predefine="TM4C1294NCPDT SETA 1" --li
st=.\listings\gpio.lst gpio.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 133 in file gpio.s
   Uses
      None
Comment: .text unused
EsperaGPIO 00000022

Symbol: EsperaGPIO
   Definitions
      At line 173 in file gpio.s
   Uses
      At line 182 in file gpio.s
Comment: EsperaGPIO used once
GPIOPortJ_Handler 00000192

Symbol: GPIOPortJ_Handler
   Definitions
      At line 393 in file gpio.s
   Uses
      At line 144 in file gpio.s
Comment: GPIOPortJ_Handler used once
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 157 in file gpio.s
   Uses
      At line 136 in file gpio.s
Comment: GPIO_Init used once
LED_Output 000001FA

Symbol: LED_Output
   Definitions
      At line 468 in file gpio.s
   Uses
      At line 145 in file gpio.s
Comment: LED_Output used once
PortA_Output 0000017C

Symbol: PortA_Output
   Definitions
      At line 373 in file gpio.s
   Uses
      At line 137 in file gpio.s
Comment: PortA_Output used once
PortJ_Input 0000018C

Symbol: PortJ_Input
   Definitions
      At line 385 in file gpio.s
   Uses
      At line 138 in file gpio.s
Comment: PortJ_Input used once
PortK_Output 000001B4

Symbol: PortK_Output



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 415 in file gpio.s
   Uses
      At line 139 in file gpio.s
Comment: PortK_Output used once
PortL_Input 000001C4

Symbol: PortL_Input
   Definitions
      At line 427 in file gpio.s
   Uses
      At line 140 in file gpio.s
Comment: PortL_Input used once
PortM_Output 000001CA

Symbol: PortM_Output
   Definitions
      At line 435 in file gpio.s
   Uses
      At line 141 in file gpio.s
Comment: PortM_Output used once
PortP_Output 000001DA

Symbol: PortP_Output
   Definitions
      At line 447 in file gpio.s
   Uses
      At line 142 in file gpio.s
Comment: PortP_Output used once
PortQ_Output 000001EA

Symbol: PortQ_Output
   Definitions
      At line 459 in file gpio.s
   Uses
      At line 143 in file gpio.s
Comment: PortQ_Output used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

COFRE_ABRINDO 00000004

Symbol: COFRE_ABRINDO
   Definitions
      At line 17 in file gpio.s
   Uses
      None
Comment: COFRE_ABRINDO unused
COFRE_FECHADO 00000003

Symbol: COFRE_FECHADO
   Definitions
      At line 16 in file gpio.s
   Uses
      None
Comment: COFRE_FECHADO unused
COFRE_FECHANDO 00000002

Symbol: COFRE_FECHANDO
   Definitions
      At line 15 in file gpio.s
   Uses
      None
Comment: COFRE_FECHANDO unused
COFRE_TRAVADO 00000005

Symbol: COFRE_TRAVADO
   Definitions
      At line 18 in file gpio.s
   Uses
      None
Comment: COFRE_TRAVADO unused
CONFIG_SENHA 00000001

Symbol: CONFIG_SENHA
   Definitions
      At line 14 in file gpio.s
   Uses
      None
Comment: CONFIG_SENHA unused
CONFIG_SENHA_MESTRA 00000007

Symbol: CONFIG_SENHA_MESTRA
   Definitions
      At line 20 in file gpio.s
   Uses
      None
Comment: CONFIG_SENHA_MESTRA unused
DESTRAVA_COFRE 00000006

Symbol: DESTRAVA_COFRE
   Definitions
      At line 19 in file gpio.s
   Uses
      At line 399 in file gpio.s
Comment: DESTRAVA_COFRE used once
GPIO_PORTA 00000001

Symbol: GPIO_PORTA



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 40 in file gpio.s
   Uses
      At line 163 in file gpio.s
      At line 174 in file gpio.s

GPIO_PORTA_AHB_AFSEL_R 40058420

Symbol: GPIO_PORTA_AHB_AFSEL_R
   Definitions
      At line 35 in file gpio.s
   Uses
      At line 264 in file gpio.s
Comment: GPIO_PORTA_AHB_AFSEL_R used once
GPIO_PORTA_AHB_AMSEL_R 40058528

Symbol: GPIO_PORTA_AHB_AMSEL_R
   Definitions
      At line 32 in file gpio.s
   Uses
      At line 186 in file gpio.s
Comment: GPIO_PORTA_AHB_AMSEL_R used once
GPIO_PORTA_AHB_CR_R 40058524

Symbol: GPIO_PORTA_AHB_CR_R
   Definitions
      At line 31 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_CR_R unused
GPIO_PORTA_AHB_DATA_BITS_R 40058000

Symbol: GPIO_PORTA_AHB_DATA_BITS_R
   Definitions
      At line 39 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_DATA_BITS_R unused
GPIO_PORTA_AHB_DATA_R 400583FC

Symbol: GPIO_PORTA_AHB_DATA_R
   Definitions
      At line 38 in file gpio.s
   Uses
      At line 374 in file gpio.s
      At line 470 in file gpio.s

GPIO_PORTA_AHB_DEN_R 4005851C

Symbol: GPIO_PORTA_AHB_DEN_R
   Definitions
      At line 36 in file gpio.s
   Uses
      At line 287 in file gpio.s
Comment: GPIO_PORTA_AHB_DEN_R used once
GPIO_PORTA_AHB_DIR_R 40058400

Symbol: GPIO_PORTA_AHB_DIR_R
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 34 in file gpio.s
   Uses
      At line 231 in file gpio.s
Comment: GPIO_PORTA_AHB_DIR_R used once
GPIO_PORTA_AHB_LOCK_R 40058520

Symbol: GPIO_PORTA_AHB_LOCK_R
   Definitions
      At line 30 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_LOCK_R unused
GPIO_PORTA_AHB_PCTL_R 4005852C

Symbol: GPIO_PORTA_AHB_PCTL_R
   Definitions
      At line 33 in file gpio.s
   Uses
      At line 209 in file gpio.s
Comment: GPIO_PORTA_AHB_PCTL_R used once
GPIO_PORTA_AHB_PUR_R 40058510

Symbol: GPIO_PORTA_AHB_PUR_R
   Definitions
      At line 37 in file gpio.s
   Uses
      None
Comment: GPIO_PORTA_AHB_PUR_R unused
GPIO_PORTJ 00000100

Symbol: GPIO_PORTJ
   Definitions
      At line 53 in file gpio.s
   Uses
      At line 164 in file gpio.s
      At line 175 in file gpio.s

GPIO_PORTJ_AHB_AFSEL_R 40060420

Symbol: GPIO_PORTJ_AHB_AFSEL_R
   Definitions
      At line 48 in file gpio.s
   Uses
      At line 267 in file gpio.s
Comment: GPIO_PORTJ_AHB_AFSEL_R used once
GPIO_PORTJ_AHB_AMSEL_R 40060528

Symbol: GPIO_PORTJ_AHB_AMSEL_R
   Definitions
      At line 45 in file gpio.s
   Uses
      At line 189 in file gpio.s
Comment: GPIO_PORTJ_AHB_AMSEL_R used once
GPIO_PORTJ_AHB_CR_R 40060524

Symbol: GPIO_PORTJ_AHB_CR_R
   Definitions
      At line 44 in file gpio.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      None
Comment: GPIO_PORTJ_AHB_CR_R unused
GPIO_PORTJ_AHB_DATA_BITS_R 40060000

Symbol: GPIO_PORTJ_AHB_DATA_BITS_R
   Definitions
      At line 52 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_DATA_BITS_R unused
GPIO_PORTJ_AHB_DATA_R 400603FC

Symbol: GPIO_PORTJ_AHB_DATA_R
   Definitions
      At line 51 in file gpio.s
   Uses
      At line 386 in file gpio.s
Comment: GPIO_PORTJ_AHB_DATA_R used once
GPIO_PORTJ_AHB_DEN_R 4006051C

Symbol: GPIO_PORTJ_AHB_DEN_R
   Definitions
      At line 49 in file gpio.s
   Uses
      At line 292 in file gpio.s
Comment: GPIO_PORTJ_AHB_DEN_R used once
GPIO_PORTJ_AHB_DIR_R 40060400

Symbol: GPIO_PORTJ_AHB_DIR_R
   Definitions
      At line 47 in file gpio.s
   Uses
      At line 236 in file gpio.s
Comment: GPIO_PORTJ_AHB_DIR_R used once
GPIO_PORTJ_AHB_LOCK_R 40060520

Symbol: GPIO_PORTJ_AHB_LOCK_R
   Definitions
      At line 43 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_LOCK_R unused
GPIO_PORTJ_AHB_PCTL_R 4006052C

Symbol: GPIO_PORTJ_AHB_PCTL_R
   Definitions
      At line 46 in file gpio.s
   Uses
      At line 212 in file gpio.s
Comment: GPIO_PORTJ_AHB_PCTL_R used once
GPIO_PORTJ_AHB_PUR_R 40060510

Symbol: GPIO_PORTJ_AHB_PUR_R
   Definitions
      At line 50 in file gpio.s
   Uses
      At line 323 in file gpio.s
Comment: GPIO_PORTJ_AHB_PUR_R used once
GPIO_PORTJ_IBE_R 40060408



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTJ_IBE_R
   Definitions
      At line 122 in file gpio.s
   Uses
      At line 341 in file gpio.s
Comment: GPIO_PORTJ_IBE_R used once
GPIO_PORTJ_ICR_R 4006041C

Symbol: GPIO_PORTJ_ICR_R
   Definitions
      At line 125 in file gpio.s
   Uses
      At line 348 in file gpio.s
      At line 406 in file gpio.s

GPIO_PORTJ_IEV_R 4006040C

Symbol: GPIO_PORTJ_IEV_R
   Definitions
      At line 123 in file gpio.s
   Uses
      At line 345 in file gpio.s
Comment: GPIO_PORTJ_IEV_R used once
GPIO_PORTJ_IM_R 40060410

Symbol: GPIO_PORTJ_IM_R
   Definitions
      At line 124 in file gpio.s
   Uses
      At line 332 in file gpio.s
      At line 352 in file gpio.s

GPIO_PORTJ_IS_R 40060404

Symbol: GPIO_PORTJ_IS_R
   Definitions
      At line 121 in file gpio.s
   Uses
      At line 337 in file gpio.s
Comment: GPIO_PORTJ_IS_R used once
GPIO_PORTJ_RIS_R 40060414

Symbol: GPIO_PORTJ_RIS_R
   Definitions
      At line 126 in file gpio.s
   Uses
      At line 394 in file gpio.s
Comment: GPIO_PORTJ_RIS_R used once
GPIO_PORTK 00000200

Symbol: GPIO_PORTK
   Definitions
      At line 66 in file gpio.s
   Uses
      At line 165 in file gpio.s
      At line 176 in file gpio.s

GPIO_PORTK_AFSEL_R 40061420



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTK_AFSEL_R
   Definitions
      At line 61 in file gpio.s
   Uses
      At line 270 in file gpio.s
Comment: GPIO_PORTK_AFSEL_R used once
GPIO_PORTK_AMSEL_R 40061528

Symbol: GPIO_PORTK_AMSEL_R
   Definitions
      At line 58 in file gpio.s
   Uses
      At line 192 in file gpio.s
Comment: GPIO_PORTK_AMSEL_R used once
GPIO_PORTK_CR_R 40061524

Symbol: GPIO_PORTK_CR_R
   Definitions
      At line 57 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_CR_R unused
GPIO_PORTK_DATA_BITS_R 40061000

Symbol: GPIO_PORTK_DATA_BITS_R
   Definitions
      At line 65 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_DATA_BITS_R unused
GPIO_PORTK_DATA_R 400613FC

Symbol: GPIO_PORTK_DATA_R
   Definitions
      At line 64 in file gpio.s
   Uses
      At line 416 in file gpio.s
Comment: GPIO_PORTK_DATA_R used once
GPIO_PORTK_DEN_R 4006151C

Symbol: GPIO_PORTK_DEN_R
   Definitions
      At line 62 in file gpio.s
   Uses
      At line 297 in file gpio.s
Comment: GPIO_PORTK_DEN_R used once
GPIO_PORTK_DIR_R 40061400

Symbol: GPIO_PORTK_DIR_R
   Definitions
      At line 60 in file gpio.s
   Uses
      At line 240 in file gpio.s
Comment: GPIO_PORTK_DIR_R used once
GPIO_PORTK_LOCK_R 40061520

Symbol: GPIO_PORTK_LOCK_R
   Definitions



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      At line 56 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_LOCK_R unused
GPIO_PORTK_PCTL_R 4006152C

Symbol: GPIO_PORTK_PCTL_R
   Definitions
      At line 59 in file gpio.s
   Uses
      At line 215 in file gpio.s
Comment: GPIO_PORTK_PCTL_R used once
GPIO_PORTK_PUR_R 40061510

Symbol: GPIO_PORTK_PUR_R
   Definitions
      At line 63 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_PUR_R unused
GPIO_PORTL 00000400

Symbol: GPIO_PORTL
   Definitions
      At line 78 in file gpio.s
   Uses
      At line 166 in file gpio.s
      At line 177 in file gpio.s

GPIO_PORTL_AFSEL_R 40062420

Symbol: GPIO_PORTL_AFSEL_R
   Definitions
      At line 74 in file gpio.s
   Uses
      At line 273 in file gpio.s
Comment: GPIO_PORTL_AFSEL_R used once
GPIO_PORTL_AMSEL_R 40062528

Symbol: GPIO_PORTL_AMSEL_R
   Definitions
      At line 71 in file gpio.s
   Uses
      At line 195 in file gpio.s
Comment: GPIO_PORTL_AMSEL_R used once
GPIO_PORTL_CR_R 40062524

Symbol: GPIO_PORTL_CR_R
   Definitions
      At line 70 in file gpio.s
   Uses
      None
Comment: GPIO_PORTL_CR_R unused
GPIO_PORTL_DATA_R 400623FC

Symbol: GPIO_PORTL_DATA_R
   Definitions
      At line 77 in file gpio.s
   Uses



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

      At line 428 in file gpio.s
Comment: GPIO_PORTL_DATA_R used once
GPIO_PORTL_DEN_R 4006251C

Symbol: GPIO_PORTL_DEN_R
   Definitions
      At line 75 in file gpio.s
   Uses
      At line 302 in file gpio.s
Comment: GPIO_PORTL_DEN_R used once
GPIO_PORTL_DIR_R 40062400

Symbol: GPIO_PORTL_DIR_R
   Definitions
      At line 73 in file gpio.s
   Uses
      At line 244 in file gpio.s
Comment: GPIO_PORTL_DIR_R used once
GPIO_PORTL_LOCK_R 40062520

Symbol: GPIO_PORTL_LOCK_R
   Definitions
      At line 69 in file gpio.s
   Uses
      None
Comment: GPIO_PORTL_LOCK_R unused
GPIO_PORTL_PCTL_R 4006252C

Symbol: GPIO_PORTL_PCTL_R
   Definitions
      At line 72 in file gpio.s
   Uses
      At line 218 in file gpio.s
Comment: GPIO_PORTL_PCTL_R used once
GPIO_PORTL_PUR_R 40062510

Symbol: GPIO_PORTL_PUR_R
   Definitions
      At line 76 in file gpio.s
   Uses
      At line 327 in file gpio.s
Comment: GPIO_PORTL_PUR_R used once
GPIO_PORTM 00000800

Symbol: GPIO_PORTM
   Definitions
      At line 90 in file gpio.s
   Uses
      At line 167 in file gpio.s
      At line 178 in file gpio.s

GPIO_PORTM_AFSEL_R 40063420

Symbol: GPIO_PORTM_AFSEL_R
   Definitions
      At line 86 in file gpio.s
   Uses
      At line 276 in file gpio.s
Comment: GPIO_PORTM_AFSEL_R used once



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTM_AMSEL_R 40063528

Symbol: GPIO_PORTM_AMSEL_R
   Definitions
      At line 83 in file gpio.s
   Uses
      At line 198 in file gpio.s
Comment: GPIO_PORTM_AMSEL_R used once
GPIO_PORTM_CR_R 40063524

Symbol: GPIO_PORTM_CR_R
   Definitions
      At line 82 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_CR_R unused
GPIO_PORTM_DATA_R 400633FC

Symbol: GPIO_PORTM_DATA_R
   Definitions
      At line 89 in file gpio.s
   Uses
      At line 436 in file gpio.s
Comment: GPIO_PORTM_DATA_R used once
GPIO_PORTM_DEN_R 4006351C

Symbol: GPIO_PORTM_DEN_R
   Definitions
      At line 87 in file gpio.s
   Uses
      At line 307 in file gpio.s
Comment: GPIO_PORTM_DEN_R used once
GPIO_PORTM_DIR_R 40063400

Symbol: GPIO_PORTM_DIR_R
   Definitions
      At line 85 in file gpio.s
   Uses
      At line 248 in file gpio.s
Comment: GPIO_PORTM_DIR_R used once
GPIO_PORTM_LOCK_R 40063520

Symbol: GPIO_PORTM_LOCK_R
   Definitions
      At line 81 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_LOCK_R unused
GPIO_PORTM_PCTL_R 4006352C

Symbol: GPIO_PORTM_PCTL_R
   Definitions
      At line 84 in file gpio.s
   Uses
      At line 221 in file gpio.s
Comment: GPIO_PORTM_PCTL_R used once
GPIO_PORTM_PUR_R 40063510

Symbol: GPIO_PORTM_PUR_R



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 88 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_PUR_R unused
GPIO_PORTP 00002000

Symbol: GPIO_PORTP
   Definitions
      At line 103 in file gpio.s
   Uses
      At line 168 in file gpio.s
      At line 179 in file gpio.s

GPIO_PORTP_AFSEL_R 40065420

Symbol: GPIO_PORTP_AFSEL_R
   Definitions
      At line 98 in file gpio.s
   Uses
      At line 279 in file gpio.s
Comment: GPIO_PORTP_AFSEL_R used once
GPIO_PORTP_AMSEL_R 40065528

Symbol: GPIO_PORTP_AMSEL_R
   Definitions
      At line 95 in file gpio.s
   Uses
      At line 201 in file gpio.s
Comment: GPIO_PORTP_AMSEL_R used once
GPIO_PORTP_CR_R 40065524

Symbol: GPIO_PORTP_CR_R
   Definitions
      At line 94 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_CR_R unused
GPIO_PORTP_DATA_BITS_R 40065000

Symbol: GPIO_PORTP_DATA_BITS_R
   Definitions
      At line 102 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_DATA_BITS_R unused
GPIO_PORTP_DATA_R 400653FC

Symbol: GPIO_PORTP_DATA_R
   Definitions
      At line 101 in file gpio.s
   Uses
      At line 448 in file gpio.s
Comment: GPIO_PORTP_DATA_R used once
GPIO_PORTP_DEN_R 4006551C

Symbol: GPIO_PORTP_DEN_R
   Definitions
      At line 99 in file gpio.s



ARM Macro Assembler    Page 11 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 312 in file gpio.s
Comment: GPIO_PORTP_DEN_R used once
GPIO_PORTP_DIR_R 40065400

Symbol: GPIO_PORTP_DIR_R
   Definitions
      At line 97 in file gpio.s
   Uses
      At line 252 in file gpio.s
Comment: GPIO_PORTP_DIR_R used once
GPIO_PORTP_LOCK_R 40065520

Symbol: GPIO_PORTP_LOCK_R
   Definitions
      At line 93 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_LOCK_R unused
GPIO_PORTP_PCTL_R 4006552C

Symbol: GPIO_PORTP_PCTL_R
   Definitions
      At line 96 in file gpio.s
   Uses
      At line 224 in file gpio.s
Comment: GPIO_PORTP_PCTL_R used once
GPIO_PORTP_PUR_R 40065510

Symbol: GPIO_PORTP_PUR_R
   Definitions
      At line 100 in file gpio.s
   Uses
      None
Comment: GPIO_PORTP_PUR_R unused
GPIO_PORTQ 00004000

Symbol: GPIO_PORTQ
   Definitions
      At line 116 in file gpio.s
   Uses
      At line 169 in file gpio.s
      At line 180 in file gpio.s

GPIO_PORTQ_AFSEL_R 40066420

Symbol: GPIO_PORTQ_AFSEL_R
   Definitions
      At line 111 in file gpio.s
   Uses
      At line 282 in file gpio.s
Comment: GPIO_PORTQ_AFSEL_R used once
GPIO_PORTQ_AMSEL_R 40066528

Symbol: GPIO_PORTQ_AMSEL_R
   Definitions
      At line 108 in file gpio.s
   Uses
      At line 204 in file gpio.s



ARM Macro Assembler    Page 12 Alphabetic symbol ordering
Absolute symbols

Comment: GPIO_PORTQ_AMSEL_R used once
GPIO_PORTQ_CR_R 40066524

Symbol: GPIO_PORTQ_CR_R
   Definitions
      At line 107 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_CR_R unused
GPIO_PORTQ_DATA_BITS_R 40066000

Symbol: GPIO_PORTQ_DATA_BITS_R
   Definitions
      At line 115 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_DATA_BITS_R unused
GPIO_PORTQ_DATA_R 400663FC

Symbol: GPIO_PORTQ_DATA_R
   Definitions
      At line 114 in file gpio.s
   Uses
      At line 460 in file gpio.s
      At line 471 in file gpio.s

GPIO_PORTQ_DEN_R 4006651C

Symbol: GPIO_PORTQ_DEN_R
   Definitions
      At line 112 in file gpio.s
   Uses
      At line 317 in file gpio.s
Comment: GPIO_PORTQ_DEN_R used once
GPIO_PORTQ_DIR_R 40066400

Symbol: GPIO_PORTQ_DIR_R
   Definitions
      At line 110 in file gpio.s
   Uses
      At line 256 in file gpio.s
Comment: GPIO_PORTQ_DIR_R used once
GPIO_PORTQ_LOCK_R 40066520

Symbol: GPIO_PORTQ_LOCK_R
   Definitions
      At line 106 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_LOCK_R unused
GPIO_PORTQ_PCTL_R 4006652C

Symbol: GPIO_PORTQ_PCTL_R
   Definitions
      At line 109 in file gpio.s
   Uses
      At line 227 in file gpio.s
Comment: GPIO_PORTQ_PCTL_R used once
GPIO_PORTQ_PUR_R 40066510



ARM Macro Assembler    Page 13 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTQ_PUR_R
   Definitions
      At line 113 in file gpio.s
   Uses
      None
Comment: GPIO_PORTQ_PUR_R unused
INICIO 00000000

Symbol: INICIO
   Definitions
      At line 13 in file gpio.s
   Uses
      None
Comment: INICIO unused
INVALID_DIGIT 00000100

Symbol: INVALID_DIGIT
   Definitions
      At line 10 in file gpio.s
   Uses
      None
Comment: INVALID_DIGIT unused
INVALID_PW_CHAR FFFFFFFF

Symbol: INVALID_PW_CHAR
   Definitions
      At line 11 in file gpio.s
   Uses
      None
Comment: INVALID_PW_CHAR unused
NVIC_EN1_R E000E104

Symbol: NVIC_EN1_R
   Definitions
      At line 128 in file gpio.s
   Uses
      At line 356 in file gpio.s
Comment: NVIC_EN1_R used once
NVIC_PRI12_R E000E430

Symbol: NVIC_PRI12_R
   Definitions
      At line 127 in file gpio.s
   Uses
      At line 361 in file gpio.s
Comment: NVIC_PRI12_R used once
SYSCTL_PRGPIO_R 400FEA08

Symbol: SYSCTL_PRGPIO_R
   Definitions
      At line 25 in file gpio.s
   Uses
      At line 172 in file gpio.s
Comment: SYSCTL_PRGPIO_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions



ARM Macro Assembler    Page 14 Alphabetic symbol ordering
Absolute symbols

      At line 24 in file gpio.s
   Uses
      At line 162 in file gpio.s
Comment: SYSCTL_RCGCGPIO_R used once
95 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

DestravaCofre 00000000

Symbol: DestravaCofre
   Definitions
      At line 149 in file gpio.s
   Uses
      None
Comment: DestravaCofre unused
ModificaSenhaMestra 00000000

Symbol: ModificaSenhaMestra
   Definitions
      At line 148 in file gpio.s
   Uses
      At line 403 in file gpio.s
Comment: ModificaSenhaMestra used once
Pisca_Transistor_PP5 00000000

Symbol: Pisca_Transistor_PP5
   Definitions
      At line 150 in file gpio.s
   Uses
      At line 482 in file gpio.s
Comment: Pisca_Transistor_PP5 used once
3 symbols
446 symbols in table
